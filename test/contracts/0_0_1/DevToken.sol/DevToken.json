{
    "abi": [
        {
            "type": "constructor",
            "inputs": [{ "name": "initialOwner", "type": "address", "internalType": "address" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "DOMAIN_SEPARATOR",
            "inputs": [],
            "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "allowance",
            "inputs": [
                { "name": "owner", "type": "address", "internalType": "address" },
                { "name": "spender", "type": "address", "internalType": "address" }
            ],
            "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "approve",
            "inputs": [
                { "name": "spender", "type": "address", "internalType": "address" },
                { "name": "value", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "balanceOf",
            "inputs": [{ "name": "account", "type": "address", "internalType": "address" }],
            "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "burn",
            "inputs": [{ "name": "value", "type": "uint256", "internalType": "uint256" }],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "burnFrom",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "value", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "decimals",
            "inputs": [],
            "outputs": [{ "name": "", "type": "uint8", "internalType": "uint8" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "eip712Domain",
            "inputs": [],
            "outputs": [
                { "name": "fields", "type": "bytes1", "internalType": "bytes1" },
                { "name": "name", "type": "string", "internalType": "string" },
                { "name": "version", "type": "string", "internalType": "string" },
                { "name": "chainId", "type": "uint256", "internalType": "uint256" },
                { "name": "verifyingContract", "type": "address", "internalType": "address" },
                { "name": "salt", "type": "bytes32", "internalType": "bytes32" },
                { "name": "extensions", "type": "uint256[]", "internalType": "uint256[]" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "flashFee",
            "inputs": [
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "value", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "flashLoan",
            "inputs": [
                {
                    "name": "receiver",
                    "type": "address",
                    "internalType": "contract IERC3156FlashBorrower"
                },
                { "name": "token", "type": "address", "internalType": "address" },
                { "name": "value", "type": "uint256", "internalType": "uint256" },
                { "name": "data", "type": "bytes", "internalType": "bytes" }
            ],
            "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "maxFlashLoan",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }],
            "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "mint",
            "inputs": [
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "amount", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "name",
            "inputs": [],
            "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "nonces",
            "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }],
            "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "owner",
            "inputs": [],
            "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "pause",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "paused",
            "inputs": [],
            "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "permit",
            "inputs": [
                { "name": "owner", "type": "address", "internalType": "address" },
                { "name": "spender", "type": "address", "internalType": "address" },
                { "name": "value", "type": "uint256", "internalType": "uint256" },
                { "name": "deadline", "type": "uint256", "internalType": "uint256" },
                { "name": "v", "type": "uint8", "internalType": "uint8" },
                { "name": "r", "type": "bytes32", "internalType": "bytes32" },
                { "name": "s", "type": "bytes32", "internalType": "bytes32" }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "renounceOwnership",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "symbol",
            "inputs": [],
            "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "totalSupply",
            "inputs": [],
            "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "transfer",
            "inputs": [
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "value", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferFrom",
            "inputs": [
                { "name": "from", "type": "address", "internalType": "address" },
                { "name": "to", "type": "address", "internalType": "address" },
                { "name": "value", "type": "uint256", "internalType": "uint256" }
            ],
            "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "transferOwnership",
            "inputs": [{ "name": "newOwner", "type": "address", "internalType": "address" }],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "unpause",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "Approval",
            "inputs": [
                { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
                {
                    "name": "spender",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        },
        { "type": "event", "name": "EIP712DomainChanged", "inputs": [], "anonymous": false },
        {
            "type": "event",
            "name": "OwnershipTransferred",
            "inputs": [
                {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Paused",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Transfer",
            "inputs": [
                { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
                { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Unpaused",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        { "type": "error", "name": "ECDSAInvalidSignature", "inputs": [] },
        {
            "type": "error",
            "name": "ECDSAInvalidSignatureLength",
            "inputs": [{ "name": "length", "type": "uint256", "internalType": "uint256" }]
        },
        {
            "type": "error",
            "name": "ECDSAInvalidSignatureS",
            "inputs": [{ "name": "s", "type": "bytes32", "internalType": "bytes32" }]
        },
        {
            "type": "error",
            "name": "ERC20InsufficientAllowance",
            "inputs": [
                { "name": "spender", "type": "address", "internalType": "address" },
                { "name": "allowance", "type": "uint256", "internalType": "uint256" },
                { "name": "needed", "type": "uint256", "internalType": "uint256" }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InsufficientBalance",
            "inputs": [
                { "name": "sender", "type": "address", "internalType": "address" },
                { "name": "balance", "type": "uint256", "internalType": "uint256" },
                { "name": "needed", "type": "uint256", "internalType": "uint256" }
            ]
        },
        {
            "type": "error",
            "name": "ERC20InvalidApprover",
            "inputs": [{ "name": "approver", "type": "address", "internalType": "address" }]
        },
        {
            "type": "error",
            "name": "ERC20InvalidReceiver",
            "inputs": [{ "name": "receiver", "type": "address", "internalType": "address" }]
        },
        {
            "type": "error",
            "name": "ERC20InvalidSender",
            "inputs": [{ "name": "sender", "type": "address", "internalType": "address" }]
        },
        {
            "type": "error",
            "name": "ERC20InvalidSpender",
            "inputs": [{ "name": "spender", "type": "address", "internalType": "address" }]
        },
        {
            "type": "error",
            "name": "ERC2612ExpiredSignature",
            "inputs": [{ "name": "deadline", "type": "uint256", "internalType": "uint256" }]
        },
        {
            "type": "error",
            "name": "ERC2612InvalidSigner",
            "inputs": [
                { "name": "signer", "type": "address", "internalType": "address" },
                { "name": "owner", "type": "address", "internalType": "address" }
            ]
        },
        {
            "type": "error",
            "name": "ERC3156ExceededMaxLoan",
            "inputs": [{ "name": "maxLoan", "type": "uint256", "internalType": "uint256" }]
        },
        {
            "type": "error",
            "name": "ERC3156InvalidReceiver",
            "inputs": [{ "name": "receiver", "type": "address", "internalType": "address" }]
        },
        {
            "type": "error",
            "name": "ERC3156UnsupportedToken",
            "inputs": [{ "name": "token", "type": "address", "internalType": "address" }]
        },
        { "type": "error", "name": "EnforcedPause", "inputs": [] },
        { "type": "error", "name": "ExpectedPause", "inputs": [] },
        {
            "type": "error",
            "name": "InvalidAccountNonce",
            "inputs": [
                { "name": "account", "type": "address", "internalType": "address" },
                { "name": "currentNonce", "type": "uint256", "internalType": "uint256" }
            ]
        },
        { "type": "error", "name": "InvalidShortString", "inputs": [] },
        {
            "type": "error",
            "name": "OwnableInvalidOwner",
            "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }]
        },
        {
            "type": "error",
            "name": "OwnableUnauthorizedAccount",
            "inputs": [{ "name": "account", "type": "address", "internalType": "address" }]
        },
        {
            "type": "error",
            "name": "StringTooLong",
            "inputs": [{ "name": "str", "type": "string", "internalType": "string" }]
        }
    ],
    "bytecode": {
        "object": "0x6101606040523480156200001257600080fd5b5060405162001e8a38038062001e8a833981016040819052620000359162000496565b604051806040016040528060088152602001672232bb2a37b5b2b760c11b81525080604051806040016040528060018152602001603160f81b81525083604051806040016040528060088152602001672232bb2a37b5b2b760c11b815250604051806040016040528060038152602001622222ab60e91b8152508160039081620000c091906200056c565b506004620000cf82826200056c565b50506005805460ff19169055506001600160a01b0381166200010c57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200011781620001ff565b506200012582600662000259565b610120526200013681600762000259565b61014052815160208084019190912060e052815190820120610100524660a052620001c460e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05250620001f833620001e16012600a6200074b565b620001f29064e8d4a510006200075c565b62000292565b5062000801565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208351101562000279576200027183620002d0565b90506200028c565b816200028684826200056c565b5060ff90505b92915050565b6001600160a01b038216620002be5760405163ec442f0560e01b81526000600482015260240162000103565b620002cc6000838362000313565b5050565b600080829050601f81511115620002fe578260405163305a27a960e01b815260040162000103919062000776565b80516200030b82620007c6565b179392505050565b6200032083838362000325565b505050565b6200032f6200033c565b6200032083838362000363565b60055460ff1615620003615760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b03831662000392578060026000828254620003869190620007eb565b90915550620004069050565b6001600160a01b03831660009081526020819052604090205481811015620003e75760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640162000103565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620004245760028054829003905562000443565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200048991815260200190565b60405180910390a3505050565b600060208284031215620004a957600080fd5b81516001600160a01b0381168114620004c157600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620004f357607f821691505b6020821081036200051457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200032057600081815260208120601f850160051c81016020861015620005435750805b601f850160051c820191505b8181101562000564578281556001016200054f565b505050505050565b81516001600160401b03811115620005885762000588620004c8565b620005a081620005998454620004de565b846200051a565b602080601f831160018114620005d85760008415620005bf5750858301515b600019600386901b1c1916600185901b17855562000564565b600085815260208120601f198616915b828110156200060957888601518255948401946001909101908401620005e8565b5085821015620006285787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200068f57816000190482111562000673576200067362000638565b808516156200068157918102915b93841c939080029062000653565b509250929050565b600082620006a8575060016200028c565b81620006b7575060006200028c565b8160018114620006d05760028114620006db57620006fb565b60019150506200028c565b60ff841115620006ef57620006ef62000638565b50506001821b6200028c565b5060208310610133831016604e8410600b841016171562000720575081810a6200028c565b6200072c83836200064e565b806000190482111562000743576200074362000638565b029392505050565b6000620004c160ff84168362000697565b80820281158282048414176200028c576200028c62000638565b600060208083528351808285015260005b81811015620007a55785810183015185820160400152820162000787565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620005145760001960209190910360031b1b16919050565b808201808211156200028c576200028c62000638565b60805160a05160c05160e05161010051610120516101405161162e6200085c6000396000610c8201526000610c5501526000610a7501526000610a4d015260006109a8015260006109d2015260006109fc015261162e6000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806370a08231116100de5780638da5cb5b11610097578063d505accf11610071578063d505accf14610314578063d9d98ce414610327578063dd62ed3e1461033a578063f2fde38b1461037357600080fd5b80638da5cb5b146102d057806395d89b41146102f9578063a9059cbb1461030157600080fd5b806370a0823114610256578063715018a61461027f57806379cc6790146102875780637ecebe001461029a5780638456cb59146102ad57806384b0196e146102b557600080fd5b80633f4ba83a116101305780633f4ba83a146101f557806340c10f19146101ff57806342966c68146102125780635c975abb146102255780635cffe9de14610230578063613255ab1461024357600080fd5b806306fdde0314610178578063095ea7b31461019657806318160ddd146101b957806323b872dd146101cb578063313ce567146101de5780633644e515146101ed575b600080fd5b610180610386565b60405161018d9190611247565b60405180910390f35b6101a96101a436600461126f565b610418565b604051901515815260200161018d565b6002545b60405190815260200161018d565b6101a96101d936600461129b565b610432565b6040516012815260200161018d565b6101bd610456565b6101fd610465565b005b6101fd61020d36600461126f565b610477565b6101fd6102203660046112dc565b61048d565b60055460ff166101a9565b6101a961023e3660046112f5565b61049a565b6101bd610251366004611394565b610617565b6101bd610264366004611394565b6001600160a01b031660009081526020819052604090205490565b6101fd61063f565b6101fd61029536600461126f565b610651565b6101bd6102a8366004611394565b610666565b6101fd610684565b6102bd610694565b60405161018d97969594939291906113b1565b60055461010090046001600160a01b03166040516001600160a01b03909116815260200161018d565b6101806106da565b6101a961030f36600461126f565b6106e9565b6101fd610322366004611447565b6106f7565b6101bd61033536600461126f565b610831565b6101bd6103483660046114be565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101fd610381366004611394565b610871565b606060038054610395906114f7565b80601f01602080910402602001604051908101604052809291908181526020018280546103c1906114f7565b801561040e5780601f106103e35761010080835404028352916020019161040e565b820191906000526020600020905b8154815290600101906020018083116103f157829003601f168201915b5050505050905090565b6000336104268185856108ac565b60019150505b92915050565b6000336104408582856108be565b61044b85858561093c565b506001949350505050565b600061046061099b565b905090565b61046d610ac6565b610475610af9565b565b61047f610ac6565b6104898282610b4b565b5050565b6104973382610b81565b50565b6000806104a686610617565b9050808511156104d15760405163fd9a760960e01b8152600481018290526024015b60405180910390fd5b60006104dd8787610831565b90506104e98887610b4b565b6040516323e30c8b60e01b81527f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9906001600160a01b038a16906323e30c8b906105419033908c908c9088908d908d90600401611531565b6020604051808303816000875af1158015610560573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610584919061158d565b146105ac5760405162678c5b60e81b81526001600160a01b03891660048201526024016104c8565b60006105c289306105bd858b6115bc565b6108be565b8115806105d657506001600160a01b038116155b156105f3576105ee896105e9848a6115bc565b610b81565b610608565b6105fd8988610b81565b61060889828461093c565b50600198975050505050505050565b60006001600160a01b038216301461063057600061042c565b60025461042c906000196115cf565b610647610ac6565b6104756000610bb7565b61065c8233836108be565b6104898282610b81565b6001600160a01b03811660009081526008602052604081205461042c565b61068c610ac6565b610475610c11565b6000606080600080600060606106a8610c4e565b6106b0610c7b565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b606060048054610395906114f7565b60003361042681858561093c565b8342111561071b5760405163313c898160e11b8152600481018590526024016104c8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107688c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006107c382610ca8565b905060006107d382878787610cd5565b9050896001600160a01b0316816001600160a01b03161461081a576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016104c8565b6108258a8a8a6108ac565b50505050505050505050565b60006001600160a01b038316301461086757604051635ad3edc960e11b81526001600160a01b03841660048201526024016104c8565b60005b9392505050565b610879610ac6565b6001600160a01b0381166108a357604051631e4fbdf760e01b8152600060048201526024016104c8565b61049781610bb7565b6108b98383836001610d03565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610936578181101561092757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104c8565b61093684848484036000610d03565b50505050565b6001600160a01b03831661096657604051634b637e8f60e11b8152600060048201526024016104c8565b6001600160a01b0382166109905760405163ec442f0560e01b8152600060048201526024016104c8565b6108b9838383610dd8565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156109f457507f000000000000000000000000000000000000000000000000000000000000000046145b15610a1e57507f000000000000000000000000000000000000000000000000000000000000000090565b610460604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6005546001600160a01b036101009091041633146104755760405163118cdaa760e01b81523360048201526024016104c8565b610b01610de3565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610b755760405163ec442f0560e01b8152600060048201526024016104c8565b61048960008383610dd8565b6001600160a01b038216610bab57604051634b637e8f60e11b8152600060048201526024016104c8565b61048982600083610dd8565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610c19610e06565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b2e3390565b60606104607f00000000000000000000000000000000000000000000000000000000000000006006610e2a565b60606104607f00000000000000000000000000000000000000000000000000000000000000006007610e2a565b600061042c610cb561099b565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080610ce788888888610ed5565b925092509250610cf78282610fa4565b50909695505050505050565b6001600160a01b038416610d2d5760405163e602df0560e01b8152600060048201526024016104c8565b6001600160a01b038316610d5757604051634a1406b160e11b8152600060048201526024016104c8565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561093657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dca91815260200190565b60405180910390a350505050565b6108b983838361105d565b60055460ff1661047557604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156104755760405163d93c066560e01b815260040160405180910390fd5b606060ff8314610e4457610e3d83611070565b905061042c565b818054610e50906114f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7c906114f7565b8015610ec95780601f10610e9e57610100808354040283529160200191610ec9565b820191906000526020600020905b815481529060010190602001808311610eac57829003601f168201915b5050505050905061042c565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610f105750600091506003905082610f9a565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610f64573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f9057506000925060019150829050610f9a565b9250600091508190505b9450945094915050565b6000826003811115610fb857610fb86115e2565b03610fc1575050565b6001826003811115610fd557610fd56115e2565b03610ff35760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611007576110076115e2565b036110285760405163fce698f760e01b8152600481018290526024016104c8565b600382600381111561103c5761103c6115e2565b03610489576040516335e2f38360e21b8152600481018290526024016104c8565b611065610e06565b6108b98383836110af565b6060600061107d836111d9565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6001600160a01b0383166110da5780600260008282546110cf91906115bc565b9091555061114c9050565b6001600160a01b0383166000908152602081905260409020548181101561112d5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104c8565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661116857600280548290039055611187565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111cc91815260200190565b60405180910390a3505050565b600060ff8216601f81111561042c57604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b818110156112275760208185018101518683018201520161120b565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061086a6020830184611201565b6001600160a01b038116811461049757600080fd5b6000806040838503121561128257600080fd5b823561128d8161125a565b946020939093013593505050565b6000806000606084860312156112b057600080fd5b83356112bb8161125a565b925060208401356112cb8161125a565b929592945050506040919091013590565b6000602082840312156112ee57600080fd5b5035919050565b60008060008060006080868803121561130d57600080fd5b85356113188161125a565b945060208601356113288161125a565b935060408601359250606086013567ffffffffffffffff8082111561134c57600080fd5b818801915088601f83011261136057600080fd5b81358181111561136f57600080fd5b89602082850101111561138157600080fd5b9699959850939650602001949392505050565b6000602082840312156113a657600080fd5b813561086a8161125a565b60ff60f81b881681526000602060e0818401526113d160e084018a611201565b83810360408501526113e3818a611201565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561143557835183529284019291840191600101611419565b50909c9b505050505050505050505050565b600080600080600080600060e0888a03121561146257600080fd5b873561146d8161125a565b9650602088013561147d8161125a565b95506040880135945060608801359350608088013560ff811681146114a157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156114d157600080fd5b82356114dc8161125a565b915060208301356114ec8161125a565b809150509250929050565b600181811c9082168061150b57607f821691505b60208210810361152b57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03878116825286166020820152604081018590526060810184905260a06080820181905281018290526000828460c0840137600060c0848401015260c0601f19601f8501168301019050979650505050505050565b60006020828403121561159f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561042c5761042c6115a6565b8181038181111561042c5761042c6115a6565b634e487b7160e01b600052602160045260246000fdfea26469706673582212200bb21f5cca08700beabf7270bf1610f7345bae3602acfdb0dcfa4390e810ab3d64736f6c63430008140033",
        "sourceMap": "593:776:5:-:0;;;694:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1574:52:79;;;;;;;;;;;;;-1:-1:-1;;;1574:52:79;;;1613:4;3328:431:96;;;;;;;;;;;;;-1:-1:-1;;;3328:431:96;;;777:12:5;1896:113:74;;;;;;;;;;;;;-1:-1:-1;;;1896:113:74;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:74;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:74;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;1231:7:91;:15;;-1:-1:-1;;1231:15:91;;;-1:-1:-1;;;;;;1273:26:62;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:62;;1350:1;1322:31;;;3176:51:152;3149:18;;1322:31:62;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3401:45:96;:4;3432:13;3401:30;:45::i;:::-;3393:53;;3467:51;:7;3501:16;3467:33;:51::i;:::-;3456:62;;3542:22;;;;;;;;;;3528:36;;3591:25;;;;;;3574:42;;3644:13;3627:30;;3692:23;4226:11;;4239:14;;4204:80;;;2079:95;4204:80;;;5185:25:152;5226:18;;;5219:34;;;;5269:18;;;5262:34;4255:13:96;5312:18:152;;;5305:34;4278:4:96;5355:19:152;;;5348:61;4168:7:96;;5157:19:152;;4204:80:96;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;3692:23;3667:48;;-1:-1:-1;;3747:4:96;3725:27;;-1:-1:-1;837:51:5::3;843:10;871:16;3075:2:74::0;871::5::3;:16;:::i;:::-;855:32;::::0;:13:::3;:32;:::i;:::-;837:5;:51::i;:::-;694:201:::0;593:776;;2912:187:62;3004:6;;;-1:-1:-1;;;;;3020:17:62;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:62;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2914:340:92:-;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;:20::i;:::-;3077:27;;;;3033:215;3161:5;3135:46;3176:5;3161;3135:46;:::i;:::-;-1:-1:-1;1390:66:92;;-1:-1:-1;3033:215:92;2914:340;;;;:::o;7721:208:74:-;-1:-1:-1;;;;;7791:21:74;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:74;;7864:1;7835:32;;;3176:51:152;3149:18;;7835:32:74;3030:203:152;7787:91:74;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;1708:286:92:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:92;;;;;;;;:::i;1836:72::-;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:92:o;1202:165:5:-;1330:30;1344:4;1350:2;1354:5;1330:13;:30::i;:::-;1202:165;;;:::o;1112:145:78:-;1474:19:91;:17;:19::i;:::-;1220:30:78::1;1234:4:::0;1240:2;1244:5;1220:13:::1;:30::i;2002:128:91:-:0;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:91;;;;;;;;;;;2063:61;2002:128::o;6271:1107:74:-;-1:-1:-1;;;;;6360:18:74;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:74;;-1:-1:-1;6356:540:74;;-1:-1:-1;;;;;6570:15:74;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:74;;-1:-1:-1;;;;;6625:32:152;;6649:50:74;;;6607:51:152;6674:18;;;6667:34;;;6717:18;;;6710:34;;;6580:18;;6649:50:74;6405:345:152;6599:115:74;-1:-1:-1;;;;;6834:15:74;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:74;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:74;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:74;7355:4;-1:-1:-1;;;;;7346:25:74;;7365:5;7346:25;;;;6901::152;;6889:2;6874:18;;6755:177;7346:25:74;;;;;;;;6271:1107;;;:::o;14:290:152:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:152;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:152:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:545::-;1054:2;1049:3;1046:11;1043:448;;;1090:1;1115:5;1111:2;1104:17;1160:4;1156:2;1146:19;1230:2;1218:10;1214:19;1211:1;1207:27;1201:4;1197:38;1266:4;1254:10;1251:20;1248:47;;;-1:-1:-1;1289:4:152;1248:47;1344:2;1339:3;1335:12;1332:1;1328:20;1322:4;1318:31;1308:41;;1399:82;1417:2;1410:5;1407:13;1399:82;;;1462:17;;;1443:1;1432:13;1399:82;;;1403:3;;;952:545;;;:::o;1673:1352::-;1793:10;;-1:-1:-1;;;;;1815:30:152;;1812:56;;;1848:18;;:::i;:::-;1877:97;1967:6;1927:38;1959:4;1953:11;1927:38;:::i;:::-;1921:4;1877:97;:::i;:::-;2029:4;;2093:2;2082:14;;2110:1;2105:663;;;;2812:1;2829:6;2826:89;;;-1:-1:-1;2881:19:152;;;2875:26;2826:89;-1:-1:-1;;1630:1:152;1626:11;;;1622:24;1618:29;1608:40;1654:1;1650:11;;;1605:57;2928:81;;2075:944;;2105:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2141:20:152;;;2259:236;2273:7;2270:1;2267:14;2259:236;;;2362:19;;;2356:26;2341:42;;2454:27;;;;2422:1;2410:14;;;;2289:19;;2259:236;;;2263:3;2523:6;2514:7;2511:19;2508:201;;;2584:19;;;2578:26;-1:-1:-1;;2667:1:152;2663:14;;;2679:3;2659:24;2655:37;2651:42;2636:58;2621:74;;2508:201;-1:-1:-1;;;;;2755:1:152;2739:14;;;2735:22;2722:36;;-1:-1:-1;1673:1352:152:o;3238:127::-;3299:10;3294:3;3290:20;3287:1;3280:31;3330:4;3327:1;3320:15;3354:4;3351:1;3344:15;3370:422;3459:1;3502:5;3459:1;3516:270;3537:7;3527:8;3524:21;3516:270;;;3596:4;3592:1;3588:6;3584:17;3578:4;3575:27;3572:53;;;3605:18;;:::i;:::-;3655:7;3645:8;3641:22;3638:55;;;3675:16;;;;3638:55;3754:22;;;;3714:15;;;;3516:270;;;3520:3;3370:422;;;;;:::o;3797:806::-;3846:5;3876:8;3866:80;;-1:-1:-1;3917:1:152;3931:5;;3866:80;3965:4;3955:76;;-1:-1:-1;4002:1:152;4016:5;;3955:76;4047:4;4065:1;4060:59;;;;4133:1;4128:130;;;;4040:218;;4060:59;4090:1;4081:10;;4104:5;;;4128:130;4165:3;4155:8;4152:17;4149:43;;;4172:18;;:::i;:::-;-1:-1:-1;;4228:1:152;4214:16;;4243:5;;4040:218;;4342:2;4332:8;4329:16;4323:3;4317:4;4314:13;4310:36;4304:2;4294:8;4291:16;4286:2;4280:4;4277:12;4273:35;4270:77;4267:159;;;-1:-1:-1;4379:19:152;;;4411:5;;4267:159;4458:34;4483:8;4477:4;4458:34;:::i;:::-;4528:6;4524:1;4520:6;4516:19;4507:7;4504:32;4501:58;;;4539:18;;:::i;:::-;4577:20;;3797:806;-1:-1:-1;;;3797:806:152:o;4608:140::-;4666:5;4695:47;4736:4;4726:8;4722:19;4716:4;4695:47;:::i;4753:168::-;4826:9;;;4857;;4874:15;;;4868:22;;4854:37;4844:71;;4895:18;;:::i;5420:548::-;5532:4;5561:2;5590;5579:9;5572:21;5622:6;5616:13;5665:6;5660:2;5649:9;5645:18;5638:34;5690:1;5700:140;5714:6;5711:1;5708:13;5700:140;;;5809:14;;;5805:23;;5799:30;5775:17;;;5794:2;5771:26;5764:66;5729:10;;5700:140;;;5704:3;5889:1;5884:2;5875:6;5864:9;5860:22;5856:31;5849:42;5959:2;5952;5948:7;5943:2;5935:6;5931:15;5927:29;5916:9;5912:45;5908:54;5900:62;;;;5420:548;;;;:::o;5973:297::-;6091:12;;6138:4;6127:16;;;6121:23;;6091:12;6156:16;;6153:111;;;-1:-1:-1;;6230:4:152;6226:17;;;;6223:1;6219:25;6215:38;6204:50;;5973:297;-1:-1:-1;5973:297:152:o;6275:125::-;6340:9;;;6361:10;;;6358:36;;;6374:18;;:::i;6755:177::-;593:776:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c806370a08231116100de5780638da5cb5b11610097578063d505accf11610071578063d505accf14610314578063d9d98ce414610327578063dd62ed3e1461033a578063f2fde38b1461037357600080fd5b80638da5cb5b146102d057806395d89b41146102f9578063a9059cbb1461030157600080fd5b806370a0823114610256578063715018a61461027f57806379cc6790146102875780637ecebe001461029a5780638456cb59146102ad57806384b0196e146102b557600080fd5b80633f4ba83a116101305780633f4ba83a146101f557806340c10f19146101ff57806342966c68146102125780635c975abb146102255780635cffe9de14610230578063613255ab1461024357600080fd5b806306fdde0314610178578063095ea7b31461019657806318160ddd146101b957806323b872dd146101cb578063313ce567146101de5780633644e515146101ed575b600080fd5b610180610386565b60405161018d9190611247565b60405180910390f35b6101a96101a436600461126f565b610418565b604051901515815260200161018d565b6002545b60405190815260200161018d565b6101a96101d936600461129b565b610432565b6040516012815260200161018d565b6101bd610456565b6101fd610465565b005b6101fd61020d36600461126f565b610477565b6101fd6102203660046112dc565b61048d565b60055460ff166101a9565b6101a961023e3660046112f5565b61049a565b6101bd610251366004611394565b610617565b6101bd610264366004611394565b6001600160a01b031660009081526020819052604090205490565b6101fd61063f565b6101fd61029536600461126f565b610651565b6101bd6102a8366004611394565b610666565b6101fd610684565b6102bd610694565b60405161018d97969594939291906113b1565b60055461010090046001600160a01b03166040516001600160a01b03909116815260200161018d565b6101806106da565b6101a961030f36600461126f565b6106e9565b6101fd610322366004611447565b6106f7565b6101bd61033536600461126f565b610831565b6101bd6103483660046114be565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101fd610381366004611394565b610871565b606060038054610395906114f7565b80601f01602080910402602001604051908101604052809291908181526020018280546103c1906114f7565b801561040e5780601f106103e35761010080835404028352916020019161040e565b820191906000526020600020905b8154815290600101906020018083116103f157829003601f168201915b5050505050905090565b6000336104268185856108ac565b60019150505b92915050565b6000336104408582856108be565b61044b85858561093c565b506001949350505050565b600061046061099b565b905090565b61046d610ac6565b610475610af9565b565b61047f610ac6565b6104898282610b4b565b5050565b6104973382610b81565b50565b6000806104a686610617565b9050808511156104d15760405163fd9a760960e01b8152600481018290526024015b60405180910390fd5b60006104dd8787610831565b90506104e98887610b4b565b6040516323e30c8b60e01b81527f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9906001600160a01b038a16906323e30c8b906105419033908c908c9088908d908d90600401611531565b6020604051808303816000875af1158015610560573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610584919061158d565b146105ac5760405162678c5b60e81b81526001600160a01b03891660048201526024016104c8565b60006105c289306105bd858b6115bc565b6108be565b8115806105d657506001600160a01b038116155b156105f3576105ee896105e9848a6115bc565b610b81565b610608565b6105fd8988610b81565b61060889828461093c565b50600198975050505050505050565b60006001600160a01b038216301461063057600061042c565b60025461042c906000196115cf565b610647610ac6565b6104756000610bb7565b61065c8233836108be565b6104898282610b81565b6001600160a01b03811660009081526008602052604081205461042c565b61068c610ac6565b610475610c11565b6000606080600080600060606106a8610c4e565b6106b0610c7b565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b606060048054610395906114f7565b60003361042681858561093c565b8342111561071b5760405163313c898160e11b8152600481018590526024016104c8565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107688c6001600160a01b0316600090815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006107c382610ca8565b905060006107d382878787610cd5565b9050896001600160a01b0316816001600160a01b03161461081a576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016104c8565b6108258a8a8a6108ac565b50505050505050505050565b60006001600160a01b038316301461086757604051635ad3edc960e11b81526001600160a01b03841660048201526024016104c8565b60005b9392505050565b610879610ac6565b6001600160a01b0381166108a357604051631e4fbdf760e01b8152600060048201526024016104c8565b61049781610bb7565b6108b98383836001610d03565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610936578181101561092757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016104c8565b61093684848484036000610d03565b50505050565b6001600160a01b03831661096657604051634b637e8f60e11b8152600060048201526024016104c8565b6001600160a01b0382166109905760405163ec442f0560e01b8152600060048201526024016104c8565b6108b9838383610dd8565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156109f457507f000000000000000000000000000000000000000000000000000000000000000046145b15610a1e57507f000000000000000000000000000000000000000000000000000000000000000090565b610460604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6005546001600160a01b036101009091041633146104755760405163118cdaa760e01b81523360048201526024016104c8565b610b01610de3565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610b755760405163ec442f0560e01b8152600060048201526024016104c8565b61048960008383610dd8565b6001600160a01b038216610bab57604051634b637e8f60e11b8152600060048201526024016104c8565b61048982600083610dd8565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610c19610e06565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b2e3390565b60606104607f00000000000000000000000000000000000000000000000000000000000000006006610e2a565b60606104607f00000000000000000000000000000000000000000000000000000000000000006007610e2a565b600061042c610cb561099b565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080610ce788888888610ed5565b925092509250610cf78282610fa4565b50909695505050505050565b6001600160a01b038416610d2d5760405163e602df0560e01b8152600060048201526024016104c8565b6001600160a01b038316610d5757604051634a1406b160e11b8152600060048201526024016104c8565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561093657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610dca91815260200190565b60405180910390a350505050565b6108b983838361105d565b60055460ff1661047557604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156104755760405163d93c066560e01b815260040160405180910390fd5b606060ff8314610e4457610e3d83611070565b905061042c565b818054610e50906114f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7c906114f7565b8015610ec95780601f10610e9e57610100808354040283529160200191610ec9565b820191906000526020600020905b815481529060010190602001808311610eac57829003601f168201915b5050505050905061042c565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610f105750600091506003905082610f9a565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610f64573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f9057506000925060019150829050610f9a565b9250600091508190505b9450945094915050565b6000826003811115610fb857610fb86115e2565b03610fc1575050565b6001826003811115610fd557610fd56115e2565b03610ff35760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611007576110076115e2565b036110285760405163fce698f760e01b8152600481018290526024016104c8565b600382600381111561103c5761103c6115e2565b03610489576040516335e2f38360e21b8152600481018290526024016104c8565b611065610e06565b6108b98383836110af565b6060600061107d836111d9565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6001600160a01b0383166110da5780600260008282546110cf91906115bc565b9091555061114c9050565b6001600160a01b0383166000908152602081905260409020548181101561112d5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016104c8565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661116857600280548290039055611187565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111cc91815260200190565b60405180910390a3505050565b600060ff8216601f81111561042c57604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b818110156112275760208185018101518683018201520161120b565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061086a6020830184611201565b6001600160a01b038116811461049757600080fd5b6000806040838503121561128257600080fd5b823561128d8161125a565b946020939093013593505050565b6000806000606084860312156112b057600080fd5b83356112bb8161125a565b925060208401356112cb8161125a565b929592945050506040919091013590565b6000602082840312156112ee57600080fd5b5035919050565b60008060008060006080868803121561130d57600080fd5b85356113188161125a565b945060208601356113288161125a565b935060408601359250606086013567ffffffffffffffff8082111561134c57600080fd5b818801915088601f83011261136057600080fd5b81358181111561136f57600080fd5b89602082850101111561138157600080fd5b9699959850939650602001949392505050565b6000602082840312156113a657600080fd5b813561086a8161125a565b60ff60f81b881681526000602060e0818401526113d160e084018a611201565b83810360408501526113e3818a611201565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561143557835183529284019291840191600101611419565b50909c9b505050505050505050505050565b600080600080600080600060e0888a03121561146257600080fd5b873561146d8161125a565b9650602088013561147d8161125a565b95506040880135945060608801359350608088013560ff811681146114a157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156114d157600080fd5b82356114dc8161125a565b915060208301356114ec8161125a565b809150509250929050565b600181811c9082168061150b57607f821691505b60208210810361152b57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03878116825286166020820152604081018590526060810184905260a06080820181905281018290526000828460c0840137600060c0848401015260c0601f19601f8501168301019050979650505050505050565b60006020828403121561159f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561042c5761042c6115a6565b8181038181111561042c5761042c6115a6565b634e487b7160e01b600052602160045260246000fdfea26469706673582212200bb21f5cca08700beabf7270bf1610f7345bae3602acfdb0dcfa4390e810ab3d64736f6c63430008140033",
        "sourceMap": "593:776:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1288:14:152;;1281:22;1263:41;;1251:2;1236:18;4293:186:74;1123:187:152;3144:97:74;3222:12;;3144:97;;;1461:25:152;;;1449:2;1434:18;3144:97:74;1315:177:152;5039:244:74;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;2100:36:152;;2088:2;2073:18;3002:82:74;1958:184:152;2656:112:79;;;:::i;966:63:5:-;;;:::i;:::-;;1035:93;;;;;;:::i;:::-;;:::i;618:87:76:-;;;;;;:::i;:::-;;:::i;1850:84:91:-;1920:7;;;;1850:84;;4784:962:77;;;;;;:::i;:::-;;:::i;1934:161::-;;;;;;:::i;:::-;;:::i;3299:116:74:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:74;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:62;;;:::i;1021:158:76:-;;;;;;:::i;:::-;;:::i;2406:143:79:-;;;;;;:::i;:::-;;:::i;901:59:5:-;;;:::i;5144:557:96:-;;;:::i;:::-;;;;;;;;;;;;;:::i;1638:85:62:-;1710:6;;;;;-1:-1:-1;;;;;1710:6:62;1638:85;;-1:-1:-1;;;;;5166:32:152;;;5148:51;;5136:2;5121:18;1638:85:62;5002:203:152;2276:93:74;;;:::i;3610:178::-;;;;;;:::i;:::-;;:::i;1680:672:79:-;;;;;;:::i;:::-;;:::i;2460:232:77:-;;;;;;:::i;:::-;;:::i;3846:140:74:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:74;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:62;;;;;;:::i;:::-;;:::i;2074:89:74:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:89;4420:31:74;735:10:89;4436:7:74;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:89;5182:37:74;5198:4;735:10:89;5213:5:74;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:74;;5039:244;-1:-1:-1;;;;5039:244:74:o;2656:112:79:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;966:63:5:-;1531:13:62;:11;:13::i;:::-;1012:10:5::1;:8;:10::i;:::-;966:63::o:0;1035:93::-;1531:13:62;:11;:13::i;:::-;1104:17:5::1;1110:2;1114:6;1104:5;:17::i;:::-;1035:93:::0;;:::o;618:87:76:-;672:26;735:10:89;692:5:76;672;:26::i;:::-;618:87;:::o;4784:962:77:-;4948:4;4964:15;4982:19;4995:5;4982:12;:19::i;:::-;4964:37;;5023:7;5015:5;:15;5011:84;;;5053:31;;-1:-1:-1;;;5053:31:77;;;;;1461:25:152;;;1434:18;;5053:31:77;;;;;;;;5011:84;5104:11;5118:22;5127:5;5134;5118:8;:22::i;:::-;5104:36;;5150:31;5164:8;5175:5;5150;:31::i;:::-;5195:59;;-1:-1:-1;;;5195:59:77;;1038:45;;-1:-1:-1;;;;;5195:20:77;;;;;:59;;735:10:89;;5230:5:77;;5237;;5244:3;;5249:4;;;;5195:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:75;5191:154;;5293:41;;-1:-1:-1;;;5293:41:77;;-1:-1:-1;;;;;5166:32:152;;5293:41:77;;;5148:51:152;5121:18;;5293:41:77;5002:203:152;5191:154:77;5354:24;5410:62;5434:8;5453:4;5460:11;5468:3;5460:5;:11;:::i;:::-;5410:15;:62::i;:::-;5486:8;;;:42;;-1:-1:-1;;;;;;5498:30:77;;;5486:42;5482:237;;;5544:37;5558:8;5569:11;5577:3;5569:5;:11;:::i;:::-;5544:5;:37::i;:::-;5482:237;;;5612:31;5626:8;5637:5;5612;:31::i;:::-;5657:51;5675:8;5686:16;5704:3;5657:9;:51::i;:::-;-1:-1:-1;5735:4:77;;4784:962;-1:-1:-1;;;;;;;;4784:962:77:o;1934:161::-;2000:7;-1:-1:-1;;;;;2026:22:77;;2043:4;2026:22;:62;;2087:1;2026:62;;;3222:12:74;;2051:33:77;;-1:-1:-1;;2051:33:77;:::i;2293:101:62:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;1021:158:76:-:0;1096:45;1112:7;735:10:89;1135:5:76;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;2406:143:79:-;-1:-1:-1;;;;;624:14:90;;2497:7:79;624:14:90;;;:7;:14;;;;;;2523:19:79;538:107:90;901:59:5;1531:13:62;:11;:13::i;:::-;945:8:5::1;:6;:8::i;5144:557:96:-:0;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5668;;;5652:1;5668:16;;;;;;;;;-1:-1:-1;;;5482:212:96;;;-1:-1:-1;5482:212:96;;-1:-1:-1;5590:13:96;;-1:-1:-1;5625:4:96;;-1:-1:-1;5652:1:96;-1:-1:-1;5668:16:96;-1:-1:-1;5482:212:96;-1:-1:-1;5144:557:96:o;2276:93:74:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:89;3733:27:74;735:10:89;3750:2:74;3754:5;3733:9;:27::i;1680:672:79:-;1901:8;1883:15;:26;1879:97;;;1932:33;;-1:-1:-1;;;1932:33:79;;;;;1461:25:152;;;1434:18;;1932:33:79;1315:177:152;1879:97:79;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;-1:-1:-1;;;;;1121:14:90;819:7;1121:14;;;:7;:14;;;;;:16;;;;;;;;;759:395;2068:16:79;2017:78;;;;;;8564:25:152;;;;-1:-1:-1;;;;;8663:15:152;;;8643:18;;;8636:43;8715:15;;;;8695:18;;;8688:43;8747:18;;;8740:34;8790:19;;;8783:35;8834:19;;;8827:35;;;8536:19;;2017:78:79;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;-1:-1:-1;;;;;2220:15:79;:6;-1:-1:-1;;;;;2220:15:79;;2216:88;;2258:35;;-1:-1:-1;;;2258:35:79;;-1:-1:-1;;;;;9103:15:152;;;2258:35:79;;;9085:34:152;9155:15;;9135:18;;;9128:43;9020:18;;2258:35:79;8873:304:152;2216:88:79;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;2460:232:77:-;2537:7;-1:-1:-1;;;;;2560:22:77;;2577:4;2560:22;2556:90;;2605:30;;-1:-1:-1;;;2605:30:77;;-1:-1:-1;;;;;5166:32:152;;2605:30:77;;;5148:51:152;5121:18;;2605:30:77;5002:203:152;2556:90:77;3160:7;2662:23;2655:30;2460:232;-1:-1:-1;;;2460:232:77:o;2543:215:62:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:62;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:62;;2700:1:::1;2672:31;::::0;::::1;5148:51:152::0;5121:18;;2672:31:62::1;5002:203:152::0;2623:91:62::1;2723:28;2742:8;2723:18;:28::i;8989:128:74:-:0;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:74;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:74;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:74;;-1:-1:-1;;;;;9402:32:152;;10936:60:74;;;9384:51:152;9451:18;;;9444:34;;;9494:18;;;9487:34;;;9357:18;;10936:60:74;9182:345:152;10881:130:74;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:74;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:74;;5807:1;5780:30;;;5148:51:152;5121:18;;5780:30:74;5002:203:152;5735:86:74;-1:-1:-1;;;;;5834:16:74;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:74;;5902:1;5873:32;;;5148:51:152;5121:18;;5873:32:74;5002:203:152;5830:86:74;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;3845:262:96:-;3898:7;3929:4;-1:-1:-1;;;;;3938:11:96;3921:28;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;-1:-1:-1;4007:22:96;;3845:262::o;3917:184::-;4067:23;4204:80;;;2079:95;4204:80;;;9791:25:152;4226:11:96;9832:18:152;;;9825:34;;;;4239:14:96;9875:18:152;;;9868:34;4255:13:96;9918:18:152;;;9911:34;4278:4:96;9961:19:152;;;9954:61;4168:7:96;;9763:19:152;;4204:80:96;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;;1796:162:62;1710:6;;-1:-1:-1;;;;;1710:6:62;;;;;735:10:89;1855:23:62;1851:101;;1901:40;;-1:-1:-1;;;1901:40:62;;735:10:89;1901:40:62;;;5148:51:152;5121:18;;1901:40:62;5002:203:152;2710:117:91;1721:16;:14;:16::i;:::-;2768:7:::1;:15:::0;;-1:-1:-1;;2768:15:91::1;::::0;;2798:22:::1;735:10:89::0;2807:12:91::1;2798:22;::::0;-1:-1:-1;;;;;5166:32:152;;;5148:51;;5136:2;5121:18;2798:22:91::1;;;;;;;2710:117::o:0;7721:208:74:-;-1:-1:-1;;;;;7791:21:74;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:74;;7864:1;7835:32;;;5148:51:152;5121:18;;7835:32:74;5002:203:152;7787:91:74;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;8247:206::-;-1:-1:-1;;;;;8317:21:74;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:74;;8388:1;8361:30;;;5148:51:152;5121:18;;8361:30:74;5002:203:152;8313:89:74;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;2912:187:62:-;3004:6;;;-1:-1:-1;;;;;3020:17:62;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:62;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2463:115:91:-;1474:19;:17;:19::i;:::-;2522:7:::1;:14:::0;;-1:-1:-1;;2522:14:91::1;2532:4;2522:14;::::0;;2551:20:::1;2558:12;735:10:89::0;;656:96;6021:126:96;6067:13;6099:41;:5;6126:13;6099:26;:41::i;6473:135::-;6522:13;6554:47;:8;6584:16;6554:29;:47::i;4917:176::-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;3555:4:97;3549:11;-1:-1:-1;;;3573:23:97;;3625:4;3616:14;;3609:39;;;;3677:4;3668:14;;3661:34;3733:4;3718:20;;;3353:401;6803:260:95;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;-1:-1:-1;7047:9:95;;6803:260;-1:-1:-1;;;;;;6803:260:95:o;9949:432:74:-;-1:-1:-1;;;;;10061:19:74;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:74;;10132:1;10103:32;;;5148:51:152;5121:18;;10103:32:74;5002:203:152;10057:89:74;-1:-1:-1;;;;;10159:21:74;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:74;;10231:1;10203:31;;;5148:51:152;5121:18;;10203:31:74;5002:203:152;10155:90:74;-1:-1:-1;;;;;10254:18:74;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:74;10342:5;-1:-1:-1;;;;;10333:31:74;;10358:5;10333:31;;;;1461:25:152;;1449:2;1434:18;;1315:177;10333:31:74;;;;;;;;9949:432;;;;:::o;1202:165:5:-;1330:30;1344:4;1350:2;1354:5;1330:13;:30::i;2202:126:91:-;1920:7;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:91;;;;;;;;;;;2002:128;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:91;;;;;;;;;;;3385:267:92;3479:13;1390:66;3508:46;;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5140:1530:95;5266:7;;;6199:66;6186:79;;6182:164;;;-1:-1:-1;6297:1:95;;-1:-1:-1;6301:30:95;;-1:-1:-1;6333:1:95;6281:54;;6182:164;6457:24;;;6440:14;6457:24;;;;;;;;;10253:25:152;;;10326:4;10314:17;;10294:18;;;10287:45;;;;10348:18;;;10341:34;;;10391:18;;;10384:34;;;6457:24:95;;10225:19:152;;6457:24:95;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6457:24:95;;-1:-1:-1;;6457:24:95;;;-1:-1:-1;;;;;;;6495:20:95;;6491:113;;-1:-1:-1;6547:1:95;;-1:-1:-1;6551:29:95;;-1:-1:-1;6547:1:95;;-1:-1:-1;6531:62:95;;6491:113;6622:6;-1:-1:-1;6630:20:95;;-1:-1:-1;6630:20:95;;-1:-1:-1;5140:1530:95;;;;;;;;;:::o;7196:532::-;7291:20;7282:5;:29;;;;;;;;:::i;:::-;;7278:444;;7196:532;;:::o;7278:444::-;7387:29;7378:5;:38;;;;;;;;:::i;:::-;;7374:348;;7439:23;;-1:-1:-1;;;7439:23:95;;;;;;;;;;;7374:348;7492:35;7483:5;:44;;;;;;;;:::i;:::-;;7479:243;;7550:46;;-1:-1:-1;;;7550:46:95;;;;;1461:25:152;;;1434:18;;7550:46:95;1315:177:152;7479:243:95;7626:30;7617:5;:39;;;;;;;;:::i;:::-;;7613:109;;7679:32;;-1:-1:-1;;;7679:32:95;;;;;1461:25:152;;;1434:18;;7679:32:95;1315:177:152;1112:145:78;1474:19:91;:17;:19::i;:::-;1220:30:78::1;1234:4;1240:2;1244:5;1220:13;:30::i;2078:405:92:-:0;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:92;;2300:14;;;;;;;;;-1:-1:-1;;;2390:16:92;;;-1:-1:-1;2435:4:92;2426:14;;2419:28;;;;-1:-1:-1;2390:16:92;2078:405::o;6271:1107:74:-;-1:-1:-1;;;;;6360:18:74;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:74;;-1:-1:-1;6356:540:74;;-1:-1:-1;;;;;6570:15:74;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:74;;-1:-1:-1;;;;;9402:32:152;;6649:50:74;;;9384:51:152;9451:18;;;9444:34;;;9494:18;;;9487:34;;;9357:18;;6649:50:74;9182:345:152;6599:115:74;-1:-1:-1;;;;;6834:15:74;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:74;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:74;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:74;7355:4;-1:-1:-1;;;;;7346:25:74;;7365:5;7346:25;;;;1461::152;;1449:2;1434:18;;1315:177;7346:25:74;;;;;;;;6271:1107;;;:::o;2555:245:92:-;2616:7;2688:4;2652:40;;2715:2;2706:11;;2702:69;;;2740:20;;-1:-1:-1;;;2740:20:92;;;;;;;;;;;14:423:152;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;667:131::-;-1:-1:-1;;;;;742:31:152;;732:42;;722:70;;788:1;785;778:12;803:315;871:6;879;932:2;920:9;911:7;907:23;903:32;900:52;;;948:1;945;938:12;900:52;987:9;974:23;1006:31;1031:5;1006:31;:::i;:::-;1056:5;1108:2;1093:18;;;;1080:32;;-1:-1:-1;;;803:315:152:o;1497:456::-;1574:6;1582;1590;1643:2;1631:9;1622:7;1618:23;1614:32;1611:52;;;1659:1;1656;1649:12;1611:52;1698:9;1685:23;1717:31;1742:5;1717:31;:::i;:::-;1767:5;-1:-1:-1;1824:2:152;1809:18;;1796:32;1837:33;1796:32;1837:33;:::i;:::-;1497:456;;1889:7;;-1:-1:-1;;;1943:2:152;1928:18;;;;1915:32;;1497:456::o;2329:180::-;2388:6;2441:2;2429:9;2420:7;2416:23;2412:32;2409:52;;;2457:1;2454;2447:12;2409:52;-1:-1:-1;2480:23:152;;2329:180;-1:-1:-1;2329:180:152:o;2514:967::-;2642:6;2650;2658;2666;2674;2727:3;2715:9;2706:7;2702:23;2698:33;2695:53;;;2744:1;2741;2734:12;2695:53;2783:9;2770:23;2802:31;2827:5;2802:31;:::i;:::-;2852:5;-1:-1:-1;2909:2:152;2894:18;;2881:32;2922:33;2881:32;2922:33;:::i;:::-;2974:7;-1:-1:-1;3028:2:152;3013:18;;3000:32;;-1:-1:-1;3083:2:152;3068:18;;3055:32;3106:18;3136:14;;;3133:34;;;3163:1;3160;3153:12;3133:34;3201:6;3190:9;3186:22;3176:32;;3246:7;3239:4;3235:2;3231:13;3227:27;3217:55;;3268:1;3265;3258:12;3217:55;3308:2;3295:16;3334:2;3326:6;3323:14;3320:34;;;3350:1;3347;3340:12;3320:34;3395:7;3390:2;3381:6;3377:2;3373:15;3369:24;3366:37;3363:57;;;3416:1;3413;3406:12;3363:57;2514:967;;;;-1:-1:-1;2514:967:152;;-1:-1:-1;3447:2:152;3439:11;;3469:6;2514:967;-1:-1:-1;;;2514:967:152:o;3486:247::-;3545:6;3598:2;3586:9;3577:7;3573:23;3569:32;3566:52;;;3614:1;3611;3604:12;3566:52;3653:9;3640:23;3672:31;3697:5;3672:31;:::i;3738:1259::-;4144:3;4139;4135:13;4127:6;4123:26;4112:9;4105:45;4086:4;4169:2;4207:3;4202:2;4191:9;4187:18;4180:31;4234:46;4275:3;4264:9;4260:19;4252:6;4234:46;:::i;:::-;4328:9;4320:6;4316:22;4311:2;4300:9;4296:18;4289:50;4362:33;4388:6;4380;4362:33;:::i;:::-;4426:2;4411:18;;4404:34;;;-1:-1:-1;;;;;4475:32:152;;4469:3;4454:19;;4447:61;4495:3;4524:19;;4517:35;;;4589:22;;;4583:3;4568:19;;4561:51;4661:13;;4683:22;;;4759:15;;;;-1:-1:-1;4721:15:152;;;;-1:-1:-1;4802:169:152;4816:6;4813:1;4810:13;4802:169;;;4877:13;;4865:26;;4946:15;;;;4911:12;;;;4838:1;4831:9;4802:169;;;-1:-1:-1;4988:3:152;;3738:1259;-1:-1:-1;;;;;;;;;;;;3738:1259:152:o;5210:829::-;5321:6;5329;5337;5345;5353;5361;5369;5422:3;5410:9;5401:7;5397:23;5393:33;5390:53;;;5439:1;5436;5429:12;5390:53;5478:9;5465:23;5497:31;5522:5;5497:31;:::i;:::-;5547:5;-1:-1:-1;5604:2:152;5589:18;;5576:32;5617:33;5576:32;5617:33;:::i;:::-;5669:7;-1:-1:-1;5723:2:152;5708:18;;5695:32;;-1:-1:-1;5774:2:152;5759:18;;5746:32;;-1:-1:-1;5830:3:152;5815:19;;5802:33;5879:4;5866:18;;5854:31;;5844:59;;5899:1;5896;5889:12;5844:59;5210:829;;;;-1:-1:-1;5210:829:152;;;;5922:7;5976:3;5961:19;;5948:33;;-1:-1:-1;6028:3:152;6013:19;;;6000:33;;5210:829;-1:-1:-1;;5210:829:152:o;6044:388::-;6112:6;6120;6173:2;6161:9;6152:7;6148:23;6144:32;6141:52;;;6189:1;6186;6179:12;6141:52;6228:9;6215:23;6247:31;6272:5;6247:31;:::i;:::-;6297:5;-1:-1:-1;6354:2:152;6339:18;;6326:32;6367:33;6326:32;6367:33;:::i;:::-;6419:7;6409:17;;;6044:388;;;;;:::o;6437:380::-;6516:1;6512:12;;;;6559;;;6580:61;;6634:4;6626:6;6622:17;6612:27;;6580:61;6687:2;6679:6;6676:14;6656:18;6653:38;6650:161;;6733:10;6728:3;6724:20;6721:1;6714:31;6768:4;6765:1;6758:15;6796:4;6793:1;6786:15;6650:161;;6437:380;;;:::o;6822:734::-;-1:-1:-1;;;;;7129:15:152;;;7111:34;;7181:15;;7176:2;7161:18;;7154:43;7228:2;7213:18;;7206:34;;;7271:2;7256:18;;7249:34;;;7091:3;7314;7299:19;;7292:32;;;7340:19;;7333:35;;;7054:4;7361:6;7411;7405:3;7390:19;;7377:49;7476:1;7470:3;7461:6;7450:9;7446:22;7442:32;7435:43;7546:3;7539:2;7535:7;7530:2;7522:6;7518:15;7514:29;7503:9;7499:45;7495:55;7487:63;;6822:734;;;;;;;;;:::o;7561:184::-;7631:6;7684:2;7672:9;7663:7;7659:23;7655:32;7652:52;;;7700:1;7697;7690:12;7652:52;-1:-1:-1;7723:16:152;;7561:184;-1:-1:-1;7561:184:152:o;7750:127::-;7811:10;7806:3;7802:20;7799:1;7792:31;7842:4;7839:1;7832:15;7866:4;7863:1;7856:15;7882:125;7947:9;;;7968:10;;;7965:36;;;7981:18;;:::i;8012:128::-;8079:9;;;8100:11;;;8097:37;;;8114:18;;:::i;10429:127::-;10490:10;10485:3;10481:20;10478:1;10471:31;10521:4;10518:1;10511:15;10545:4;10542:1;10535:15",
        "linkReferences": {},
        "immutableReferences": {
            "59265": [{ "start": 2556, "length": 32 }],
            "59267": [{ "start": 2514, "length": 32 }],
            "59269": [{ "start": 2472, "length": 32 }],
            "59271": [{ "start": 2637, "length": 32 }],
            "59273": [{ "start": 2677, "length": 32 }],
            "59276": [{ "start": 3157, "length": 32 }],
            "59279": [{ "start": 3202, "length": 32 }]
        }
    },
    "methodIdentifiers": {
        "DOMAIN_SEPARATOR()": "3644e515",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "burnFrom(address,uint256)": "79cc6790",
        "decimals()": "313ce567",
        "eip712Domain()": "84b0196e",
        "flashFee(address,uint256)": "d9d98ce4",
        "flashLoan(address,address,uint256,bytes)": "5cffe9de",
        "maxFlashLoan(address)": "613255ab",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "nonces(address)": "7ecebe00",
        "owner()": "8da5cb5b",
        "pause()": "8456cb59",
        "paused()": "5c975abb",
        "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
        "renounceOwnership()": "715018a6",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b",
        "unpause()": "3f4ba83a"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxLoan\",\"type\":\"uint256\"}],\"name\":\"ERC3156ExceededMaxLoan\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC3156InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"ERC3156UnsupportedToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"ERC3156ExceededMaxLoan(uint256)\":[{\"details\":\"The requested loan exceeds the max loan value for `token`.\"}],\"ERC3156InvalidReceiver(address)\":[{\"details\":\"The receiver of a flashloan is not a valid {onFlashLoan} implementer.\"}],\"ERC3156UnsupportedToken(address)\":[{\"details\":\"The loan token is not valid.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"flashFee(address,uint256)\":{\"details\":\"Returns the fee applied when doing flash loans. This function calls the {_flashFee} function which returns the fee applied when doing flash loans.\",\"params\":{\"token\":\"The token to be flash loaned.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"The fees applied to the corresponding flash loan.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own value + fee tokens and have them approved back to the token contract itself so they can be burned.\",\"params\":{\"data\":\"An arbitrary datafield that is passed to the receiver.\",\"receiver\":\"The receiver of the flash loan. Should implement the {IERC3156FlashBorrower-onFlashLoan} interface.\",\"token\":\"The token to be flash loaned. Only `address(this)` is supported.\",\"value\":\"The amount of tokens to be loaned.\"},\"returns\":{\"_0\":\"`true` if the flash loan was successful.\"}},\"maxFlashLoan(address)\":{\"details\":\"Returns the maximum amount of tokens available for loan.\",\"params\":{\"token\":\"The address of the token that is requested.\"},\"returns\":{\"_0\":\"The amount of token that can be loaned. NOTE: This function does not consider any form of supply cap, so in case it's used in a token with a cap like {ERC20Capped}, make sure to override this function to integrate the cap instead of `type(uint256).max`.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"helpers/token/DevToken.sol\":\"DevToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@common/=src/common/\",\":@contracts/=src/contracts/\",\":@helpers/=helpers/\",\":@interfaces/=src/interfaces/\",\":@openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@test-utils/=test/common/\",\":@types/=src/types/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":sizeChecker/=lib/Solidity_Contract_Size_Checker/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"helpers/token/DevToken.sol\":{\"keccak256\":\"0x3bb482fc3698541b5db58a245123c8aea1b8c004eb73e950d944282e880d207e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eaa030cb3dcd28b7c0e1f81cfc33b04a017122e967594320a15e45995d36364\",\"dweb:/ipfs/QmZzWw7KvHGLGpCsPYxznPGQMPa4NTiGsLPSaAnF4a1CUU\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475\",\"dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashLender.sol\":{\"keccak256\":\"0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306\",\"dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20FlashMint.sol\":{\"keccak256\":\"0xde94f78563e985acb16868dae5955135207baa103e2a654108b6f043fd8c51c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b6f33918ae1ef9898bf976dbd62771ea10054cc330f8ca262e61ab6d0cdfa25\",\"dweb:/ipfs/QmReBtCQDR8F7pEd2Cwf2XWLtJNxQAKJiY3p7n7UZniwuL\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"lib/openzeppelin-contracts/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
    "metadata": {
        "compiler": { "version": "0.8.20+commit.a1b79de6" },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        { "internalType": "address", "name": "initialOwner", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                { "inputs": [], "type": "error", "name": "ECDSAInvalidSignature" },
                {
                    "inputs": [{ "internalType": "uint256", "name": "length", "type": "uint256" }],
                    "type": "error",
                    "name": "ECDSAInvalidSignatureLength"
                },
                {
                    "inputs": [{ "internalType": "bytes32", "name": "s", "type": "bytes32" }],
                    "type": "error",
                    "name": "ECDSAInvalidSignatureS"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "spender", "type": "address" },
                        { "internalType": "uint256", "name": "allowance", "type": "uint256" },
                        { "internalType": "uint256", "name": "needed", "type": "uint256" }
                    ],
                    "type": "error",
                    "name": "ERC20InsufficientAllowance"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "sender", "type": "address" },
                        { "internalType": "uint256", "name": "balance", "type": "uint256" },
                        { "internalType": "uint256", "name": "needed", "type": "uint256" }
                    ],
                    "type": "error",
                    "name": "ERC20InsufficientBalance"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "approver", "type": "address" }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidApprover"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "receiver", "type": "address" }
                    ],
                    "type": "error",
                    "name": "ERC20InvalidReceiver"
                },
                {
                    "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }],
                    "type": "error",
                    "name": "ERC20InvalidSender"
                },
                {
                    "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }],
                    "type": "error",
                    "name": "ERC20InvalidSpender"
                },
                {
                    "inputs": [
                        { "internalType": "uint256", "name": "deadline", "type": "uint256" }
                    ],
                    "type": "error",
                    "name": "ERC2612ExpiredSignature"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "signer", "type": "address" },
                        { "internalType": "address", "name": "owner", "type": "address" }
                    ],
                    "type": "error",
                    "name": "ERC2612InvalidSigner"
                },
                {
                    "inputs": [{ "internalType": "uint256", "name": "maxLoan", "type": "uint256" }],
                    "type": "error",
                    "name": "ERC3156ExceededMaxLoan"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "receiver", "type": "address" }
                    ],
                    "type": "error",
                    "name": "ERC3156InvalidReceiver"
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "type": "error",
                    "name": "ERC3156UnsupportedToken"
                },
                { "inputs": [], "type": "error", "name": "EnforcedPause" },
                { "inputs": [], "type": "error", "name": "ExpectedPause" },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "uint256", "name": "currentNonce", "type": "uint256" }
                    ],
                    "type": "error",
                    "name": "InvalidAccountNonce"
                },
                { "inputs": [], "type": "error", "name": "InvalidShortString" },
                {
                    "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
                    "type": "error",
                    "name": "OwnableInvalidOwner"
                },
                {
                    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
                    "type": "error",
                    "name": "OwnableUnauthorizedAccount"
                },
                {
                    "inputs": [{ "internalType": "string", "name": "str", "type": "string" }],
                    "type": "error",
                    "name": "StringTooLong"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "spender",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approval",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "type": "event",
                    "name": "EIP712DomainChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OwnershipTransferred",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Paused",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "from",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Transfer",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Unpaused",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "DOMAIN_SEPARATOR",
                    "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "owner", "type": "address" },
                        { "internalType": "address", "name": "spender", "type": "address" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "allowance",
                    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "spender", "type": "address" },
                        { "internalType": "uint256", "name": "value", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approve",
                    "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "balanceOf",
                    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
                },
                {
                    "inputs": [{ "internalType": "uint256", "name": "value", "type": "uint256" }],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burn"
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "account", "type": "address" },
                        { "internalType": "uint256", "name": "value", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "burnFrom"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "decimals",
                    "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "eip712Domain",
                    "outputs": [
                        { "internalType": "bytes1", "name": "fields", "type": "bytes1" },
                        { "internalType": "string", "name": "name", "type": "string" },
                        { "internalType": "string", "name": "version", "type": "string" },
                        { "internalType": "uint256", "name": "chainId", "type": "uint256" },
                        {
                            "internalType": "address",
                            "name": "verifyingContract",
                            "type": "address"
                        },
                        { "internalType": "bytes32", "name": "salt", "type": "bytes32" },
                        { "internalType": "uint256[]", "name": "extensions", "type": "uint256[]" }
                    ]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "value", "type": "uint256" }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "flashFee",
                    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
                },
                {
                    "inputs": [
                        {
                            "internalType": "contract IERC3156FlashBorrower",
                            "name": "receiver",
                            "type": "address"
                        },
                        { "internalType": "address", "name": "token", "type": "address" },
                        { "internalType": "uint256", "name": "value", "type": "uint256" },
                        { "internalType": "bytes", "name": "data", "type": "bytes" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "flashLoan",
                    "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "maxFlashLoan",
                    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "amount", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "mint"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "name",
                    "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
                },
                {
                    "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "nonces",
                    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "owner",
                    "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "pause"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "paused",
                    "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "owner", "type": "address" },
                        { "internalType": "address", "name": "spender", "type": "address" },
                        { "internalType": "uint256", "name": "value", "type": "uint256" },
                        { "internalType": "uint256", "name": "deadline", "type": "uint256" },
                        { "internalType": "uint8", "name": "v", "type": "uint8" },
                        { "internalType": "bytes32", "name": "r", "type": "bytes32" },
                        { "internalType": "bytes32", "name": "s", "type": "bytes32" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "permit"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "renounceOwnership"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "symbol",
                    "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalSupply",
                    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "value", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transfer",
                    "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "from", "type": "address" },
                        { "internalType": "address", "name": "to", "type": "address" },
                        { "internalType": "uint256", "name": "value", "type": "uint256" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferFrom",
                    "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
                },
                {
                    "inputs": [
                        { "internalType": "address", "name": "newOwner", "type": "address" }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferOwnership"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unpause"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "DOMAIN_SEPARATOR()": {
                        "details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
                    },
                    "allowance(address,address)": { "details": "See {IERC20-allowance}." },
                    "approve(address,uint256)": {
                        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
                    },
                    "balanceOf(address)": { "details": "See {IERC20-balanceOf}." },
                    "burn(uint256)": {
                        "details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
                    },
                    "burnFrom(address,uint256)": {
                        "details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
                    },
                    "decimals()": {
                        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
                    },
                    "eip712Domain()": { "details": "See {IERC-5267}." },
                    "flashFee(address,uint256)": {
                        "details": "Returns the fee applied when doing flash loans. This function calls the {_flashFee} function which returns the fee applied when doing flash loans.",
                        "params": {
                            "token": "The token to be flash loaned.",
                            "value": "The amount of tokens to be loaned."
                        },
                        "returns": { "_0": "The fees applied to the corresponding flash loan." }
                    },
                    "flashLoan(address,address,uint256,bytes)": {
                        "details": "Performs a flash loan. New tokens are minted and sent to the `receiver`, who is required to implement the {IERC3156FlashBorrower} interface. By the end of the flash loan, the receiver is expected to own value + fee tokens and have them approved back to the token contract itself so they can be burned.",
                        "params": {
                            "data": "An arbitrary datafield that is passed to the receiver.",
                            "receiver": "The receiver of the flash loan. Should implement the {IERC3156FlashBorrower-onFlashLoan} interface.",
                            "token": "The token to be flash loaned. Only `address(this)` is supported.",
                            "value": "The amount of tokens to be loaned."
                        },
                        "returns": { "_0": "`true` if the flash loan was successful." }
                    },
                    "maxFlashLoan(address)": {
                        "details": "Returns the maximum amount of tokens available for loan.",
                        "params": { "token": "The address of the token that is requested." },
                        "returns": {
                            "_0": "The amount of token that can be loaned. NOTE: This function does not consider any form of supply cap, so in case it's used in a token with a cap like {ERC20Capped}, make sure to override this function to integrate the cap instead of `type(uint256).max`."
                        }
                    },
                    "name()": { "details": "Returns the name of the token." },
                    "nonces(address)": {
                        "details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
                    },
                    "owner()": { "details": "Returns the address of the current owner." },
                    "paused()": {
                        "details": "Returns true if the contract is paused, and false otherwise."
                    },
                    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
                        "details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
                    },
                    "renounceOwnership()": {
                        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
                    },
                    "symbol()": {
                        "details": "Returns the symbol of the token, usually a shorter version of the name."
                    },
                    "totalSupply()": { "details": "See {IERC20-totalSupply}." },
                    "transfer(address,uint256)": {
                        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
                    },
                    "transferFrom(address,address,uint256)": {
                        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
                    },
                    "transferOwnership(address)": {
                        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
                    }
                },
                "version": 1
            },
            "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        },
        "settings": {
            "remappings": [
                "@common/=src/common/",
                "@contracts/=src/contracts/",
                "@helpers/=helpers/",
                "@interfaces/=src/interfaces/",
                "@openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
                "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
                "@test-utils/=test/common/",
                "@types/=src/types/",
                "ds-test/=lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
                "sizeChecker/=lib/Solidity_Contract_Size_Checker/",
                "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
            ],
            "optimizer": { "enabled": true, "runs": 200 },
            "metadata": { "bytecodeHash": "ipfs" },
            "compilationTarget": { "helpers/token/DevToken.sol": "DevToken" },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "helpers/token/DevToken.sol": {
                "keccak256": "0x3bb482fc3698541b5db58a245123c8aea1b8c004eb73e950d944282e880d207e",
                "urls": [
                    "bzz-raw://4eaa030cb3dcd28b7c0e1f81cfc33b04a017122e967594320a15e45995d36364",
                    "dweb:/ipfs/QmZzWw7KvHGLGpCsPYxznPGQMPa4NTiGsLPSaAnF4a1CUU"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
                "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
                "urls": [
                    "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
                    "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashBorrower.sol": {
                "keccak256": "0x9f9e6dba43fe0775c400aa384375f1f503efaf733a40187169fdfc195f5ea6fa",
                "urls": [
                    "bzz-raw://ff5fe5fac5e4ecbf9fcd34c42b6d58d1af150263dfe07bc6785a59329dd1e475",
                    "dweb:/ipfs/QmX1EhNKKL6n6RFrLLAYh6Uf3itkozjSHyGFs9DqwW4Rzy"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashLender.sol": {
                "keccak256": "0x95d9eb59f21e885406d0e28b0510f9e1a0e7b4abe6636b5c966682927c65cfdd",
                "urls": [
                    "bzz-raw://a1cbff4d620ab51abe0c4ede9e4395bae53bcc3a7edd74e0eb08d7bdef155306",
                    "dweb:/ipfs/QmQcnBK28GDH4S5uXWqAcdRY1KcusXH4CxAqp87rYLir6n"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
                "keccak256": "0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92",
                "urls": [
                    "bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a",
                    "dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
                "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
                "urls": [
                    "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
                    "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
                "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
                "urls": [
                    "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
                    "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
                "urls": [
                    "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
                    "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
                "keccak256": "0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073",
                "urls": [
                    "bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26",
                    "dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20FlashMint.sol": {
                "keccak256": "0xde94f78563e985acb16868dae5955135207baa103e2a654108b6f043fd8c51c7",
                "urls": [
                    "bzz-raw://2b6f33918ae1ef9898bf976dbd62771ea10054cc330f8ca262e61ab6d0cdfa25",
                    "dweb:/ipfs/QmReBtCQDR8F7pEd2Cwf2XWLtJNxQAKJiY3p7n7UZniwuL"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
                "keccak256": "0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67",
                "urls": [
                    "bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99",
                    "dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol": {
                "keccak256": "0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee",
                "urls": [
                    "bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2",
                    "dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
                "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
                "urls": [
                    "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
                    "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
                "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
                "urls": [
                    "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
                    "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
                "urls": [
                    "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
                    "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Nonces.sol": {
                "keccak256": "0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f",
                "urls": [
                    "bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e",
                    "dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Pausable.sol": {
                "keccak256": "0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd",
                "urls": [
                    "bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc",
                    "dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
                "keccak256": "0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6",
                "urls": [
                    "bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c",
                    "dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
                "keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
                "urls": [
                    "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
                    "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
                "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
                "urls": [
                    "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
                    "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
                "keccak256": "0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf",
                "urls": [
                    "bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c",
                    "dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
                "keccak256": "0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0",
                "urls": [
                    "bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21",
                    "dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol": {
                "keccak256": "0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435",
                "urls": [
                    "bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c",
                    "dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
                "urls": [
                    "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
                    "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
                "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
                "urls": [
                    "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
                    "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 55570,
                "contract": "helpers/token/DevToken.sol:DevToken",
                "label": "_balances",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 55576,
                "contract": "helpers/token/DevToken.sol:DevToken",
                "label": "_allowances",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
            },
            {
                "astId": 55578,
                "contract": "helpers/token/DevToken.sol:DevToken",
                "label": "_totalSupply",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
            },
            {
                "astId": 55580,
                "contract": "helpers/token/DevToken.sol:DevToken",
                "label": "_name",
                "offset": 0,
                "slot": "3",
                "type": "t_string_storage"
            },
            {
                "astId": 55582,
                "contract": "helpers/token/DevToken.sol:DevToken",
                "label": "_symbol",
                "offset": 0,
                "slot": "4",
                "type": "t_string_storage"
            },
            {
                "astId": 58206,
                "contract": "helpers/token/DevToken.sol:DevToken",
                "label": "_paused",
                "offset": 0,
                "slot": "5",
                "type": "t_bool"
            },
            {
                "astId": 53664,
                "contract": "helpers/token/DevToken.sol:DevToken",
                "label": "_owner",
                "offset": 1,
                "slot": "5",
                "type": "t_address"
            },
            {
                "astId": 59281,
                "contract": "helpers/token/DevToken.sol:DevToken",
                "label": "_nameFallback",
                "offset": 0,
                "slot": "6",
                "type": "t_string_storage"
            },
            {
                "astId": 59283,
                "contract": "helpers/token/DevToken.sol:DevToken",
                "label": "_versionFallback",
                "offset": 0,
                "slot": "7",
                "type": "t_string_storage"
            },
            {
                "astId": 58143,
                "contract": "helpers/token/DevToken.sol:DevToken",
                "label": "_nonces",
                "offset": 0,
                "slot": "8",
                "type": "t_mapping(t_address,t_uint256)"
            }
        ],
        "types": {
            "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
            "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(address => uint256))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_uint256)"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_string_storage": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
            "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" }
        }
    },
    "ast": {
        "absolutePath": "helpers/token/DevToken.sol",
        "id": 1797,
        "exportedSymbols": {
            "Context": [58129],
            "DevToken": [1796],
            "ECDSA": [59244],
            "EIP712": [59471],
            "ERC20": [56062],
            "ERC20Burnable": [56186],
            "ERC20FlashMint": [56430],
            "ERC20Pausable": [56464],
            "ERC20Permit": [56618],
            "IERC20": [56140],
            "IERC20Errors": [53929],
            "IERC20Metadata": [56644],
            "IERC20Permit": [56680],
            "IERC3156FlashBorrower": [53823],
            "IERC3156FlashLender": [53862],
            "Nonces": [58197],
            "Ownable": [53803],
            "Pausable": [58314]
        },
        "nodeType": "SourceUnit",
        "src": "81:1288:5",
        "nodes": [
            {
                "id": 1696,
                "nodeType": "PragmaDirective",
                "src": "81:23:5",
                "nodes": [],
                "literals": ["solidity", "0.8", ".20"]
            },
            {
                "id": 1697,
                "nodeType": "ImportDirective",
                "src": "106:68:5",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
                "file": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 1797,
                "sourceUnit": 56063,
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "id": 1698,
                "nodeType": "ImportDirective",
                "src": "175:87:5",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
                "file": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 1797,
                "sourceUnit": 56187,
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "id": 1699,
                "nodeType": "ImportDirective",
                "src": "263:87:5",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
                "file": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 1797,
                "sourceUnit": 56465,
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "id": 1700,
                "nodeType": "ImportDirective",
                "src": "351:65:5",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                "file": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 1797,
                "sourceUnit": 53804,
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "id": 1701,
                "nodeType": "ImportDirective",
                "src": "417:85:5",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
                "file": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 1797,
                "sourceUnit": 56619,
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "id": 1702,
                "nodeType": "ImportDirective",
                "src": "503:88:5",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20FlashMint.sol",
                "file": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20FlashMint.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 1797,
                "sourceUnit": 56431,
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "id": 1796,
                "nodeType": "ContractDefinition",
                "src": "593:776:5",
                "nodes": [
                    {
                        "id": 1741,
                        "nodeType": "FunctionDefinition",
                        "src": "694:201:5",
                        "nodes": [],
                        "body": {
                            "id": 1740,
                            "nodeType": "Block",
                            "src": "827:68:5",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 1730,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "843:3:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 1731,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "847:6:5",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "843:10:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 1737,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "hexValue": "31303030303030303030303030",
                                                    "id": 1732,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "855:13:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1000000000000_by_1",
                                                        "typeString": "int_const 1000000000000"
                                                    },
                                                    "value": "1000000000000"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 1736,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "hexValue": "3130",
                                                        "id": 1733,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "871:2:5",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_10_by_1",
                                                            "typeString": "int_const 10"
                                                        },
                                                        "value": "10"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "**",
                                                    "rightExpression": {
                                                        "arguments": [],
                                                        "expression": {
                                                            "argumentTypes": [],
                                                            "id": 1734,
                                                            "name": "decimals",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 55626,
                                                            "src": "877:8:5",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                                                "typeString": "function () view returns (uint8)"
                                                            }
                                                        },
                                                        "id": 1735,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "877:10:5",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                        }
                                                    },
                                                    "src": "871:16:5",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "855:32:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 1729,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 55902,
                                            "src": "837:5:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 1738,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "837:51:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1739,
                                    "nodeType": "ExpressionStatement",
                                    "src": "837:51:5"
                                }
                            ]
                        },
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "446576546f6b656e",
                                        "id": 1719,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "742:10:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_b3afd66fb4e0da0ef03041497cf3352c6aa78d0bd7729327cd66657af7ebf53a",
                                            "typeString": "literal_string \"DevToken\""
                                        },
                                        "value": "DevToken"
                                    },
                                    {
                                        "hexValue": "444556",
                                        "id": 1720,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "754:5:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_b1e380c01db319c0153ea3bb4fbd0ab6639cc088e3bf8cd5319b128f33a2f9e8",
                                            "typeString": "literal_string \"DEV\""
                                        },
                                        "value": "DEV"
                                    }
                                ],
                                "id": 1721,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 1718,
                                    "name": "ERC20",
                                    "nameLocations": ["736:5:5"],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 56062,
                                    "src": "736:5:5"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "736:24:5"
                            },
                            {
                                "arguments": [
                                    {
                                        "id": 1723,
                                        "name": "initialOwner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1716,
                                        "src": "777:12:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 1724,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 1722,
                                    "name": "Ownable",
                                    "nameLocations": ["769:7:5"],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 53803,
                                    "src": "769:7:5"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "769:21:5"
                            },
                            {
                                "arguments": [
                                    {
                                        "hexValue": "446576546f6b656e",
                                        "id": 1726,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "811:10:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_b3afd66fb4e0da0ef03041497cf3352c6aa78d0bd7729327cd66657af7ebf53a",
                                            "typeString": "literal_string \"DevToken\""
                                        },
                                        "value": "DevToken"
                                    }
                                ],
                                "id": 1727,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 1725,
                                    "name": "ERC20Permit",
                                    "nameLocations": ["799:11:5"],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 56618,
                                    "src": "799:11:5"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "799:23:5"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "parameters": {
                            "id": 1717,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1716,
                                    "mutability": "mutable",
                                    "name": "initialOwner",
                                    "nameLocation": "714:12:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1741,
                                    "src": "706:20:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1715,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "706:7:5",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "705:22:5"
                        },
                        "returnParameters": {
                            "id": 1728,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "827:0:5"
                        },
                        "scope": 1796,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 1750,
                        "nodeType": "FunctionDefinition",
                        "src": "901:59:5",
                        "nodes": [],
                        "body": {
                            "id": 1749,
                            "nodeType": "Block",
                            "src": "935:25:5",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 1746,
                                            "name": "_pause",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 58297,
                                            "src": "945:6:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 1747,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "945:8:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1748,
                                    "nodeType": "ExpressionStatement",
                                    "src": "945:8:5"
                                }
                            ]
                        },
                        "functionSelector": "8456cb59",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 1744,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 1743,
                                    "name": "onlyOwner",
                                    "nameLocations": ["925:9:5"],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 53714,
                                    "src": "925:9:5"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "925:9:5"
                            }
                        ],
                        "name": "pause",
                        "nameLocation": "910:5:5",
                        "parameters": {
                            "id": 1742,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "915:2:5"
                        },
                        "returnParameters": {
                            "id": 1745,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "935:0:5"
                        },
                        "scope": 1796,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 1759,
                        "nodeType": "FunctionDefinition",
                        "src": "966:63:5",
                        "nodes": [],
                        "body": {
                            "id": 1758,
                            "nodeType": "Block",
                            "src": "1002:27:5",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 1755,
                                            "name": "_unpause",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 58313,
                                            "src": "1012:8:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 1756,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1012:10:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1757,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1012:10:5"
                                }
                            ]
                        },
                        "functionSelector": "3f4ba83a",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 1753,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 1752,
                                    "name": "onlyOwner",
                                    "nameLocations": ["992:9:5"],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 53714,
                                    "src": "992:9:5"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "992:9:5"
                            }
                        ],
                        "name": "unpause",
                        "nameLocation": "975:7:5",
                        "parameters": {
                            "id": 1751,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "982:2:5"
                        },
                        "returnParameters": {
                            "id": 1754,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1002:0:5"
                        },
                        "scope": 1796,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 1774,
                        "nodeType": "FunctionDefinition",
                        "src": "1035:93:5",
                        "nodes": [],
                        "body": {
                            "id": 1773,
                            "nodeType": "Block",
                            "src": "1094:34:5",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 1769,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1761,
                                                "src": "1110:2:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 1770,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1763,
                                                "src": "1114:6:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 1768,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 55902,
                                            "src": "1104:5:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 1771,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1104:17:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1772,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1104:17:5"
                                }
                            ]
                        },
                        "functionSelector": "40c10f19",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 1766,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 1765,
                                    "name": "onlyOwner",
                                    "nameLocations": ["1084:9:5"],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 53714,
                                    "src": "1084:9:5"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1084:9:5"
                            }
                        ],
                        "name": "mint",
                        "nameLocation": "1044:4:5",
                        "parameters": {
                            "id": 1764,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1761,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1057:2:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1774,
                                    "src": "1049:10:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1760,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1049:7:5",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1763,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "1069:6:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1774,
                                    "src": "1061:14:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1762,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1061:7:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1048:28:5"
                        },
                        "returnParameters": {
                            "id": 1767,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1094:0:5"
                        },
                        "scope": 1796,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 1795,
                        "nodeType": "FunctionDefinition",
                        "src": "1202:165:5",
                        "nodes": [],
                        "body": {
                            "id": 1794,
                            "nodeType": "Block",
                            "src": "1320:47:5",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 1789,
                                                "name": "from",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1776,
                                                "src": "1344:4:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 1790,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1778,
                                                "src": "1350:2:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 1791,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1780,
                                                "src": "1354:5:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 1786,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -25,
                                                "src": "1330:5:5",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_DevToken_$1796_$",
                                                    "typeString": "type(contract super DevToken)"
                                                }
                                            },
                                            "id": 1788,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1336:7:5",
                                            "memberName": "_update",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 56463,
                                            "src": "1330:13:5",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 1792,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1330:30:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1793,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1330:30:5"
                                }
                            ]
                        },
                        "baseFunctions": [55869, 56463],
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_update",
                        "nameLocation": "1211:7:5",
                        "overrides": {
                            "id": 1784,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 1782,
                                    "name": "ERC20",
                                    "nameLocations": ["1294:5:5"],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 56062,
                                    "src": "1294:5:5"
                                },
                                {
                                    "id": 1783,
                                    "name": "ERC20Pausable",
                                    "nameLocations": ["1301:13:5"],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 56464,
                                    "src": "1301:13:5"
                                }
                            ],
                            "src": "1285:30:5"
                        },
                        "parameters": {
                            "id": 1781,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1776,
                                    "mutability": "mutable",
                                    "name": "from",
                                    "nameLocation": "1227:4:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1795,
                                    "src": "1219:12:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1775,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1219:7:5",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1778,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1241:2:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1795,
                                    "src": "1233:10:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1777,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1233:7:5",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1780,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "1253:5:5",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1795,
                                    "src": "1245:13:5",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1779,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1245:7:5",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1218:41:5"
                        },
                        "returnParameters": {
                            "id": 1785,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1320:0:5"
                        },
                        "scope": 1796,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    }
                ],
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 1703,
                            "name": "ERC20",
                            "nameLocations": ["614:5:5"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 56062,
                            "src": "614:5:5"
                        },
                        "id": 1704,
                        "nodeType": "InheritanceSpecifier",
                        "src": "614:5:5"
                    },
                    {
                        "baseName": {
                            "id": 1705,
                            "name": "ERC20Burnable",
                            "nameLocations": ["621:13:5"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 56186,
                            "src": "621:13:5"
                        },
                        "id": 1706,
                        "nodeType": "InheritanceSpecifier",
                        "src": "621:13:5"
                    },
                    {
                        "baseName": {
                            "id": 1707,
                            "name": "ERC20Pausable",
                            "nameLocations": ["636:13:5"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 56464,
                            "src": "636:13:5"
                        },
                        "id": 1708,
                        "nodeType": "InheritanceSpecifier",
                        "src": "636:13:5"
                    },
                    {
                        "baseName": {
                            "id": 1709,
                            "name": "Ownable",
                            "nameLocations": ["651:7:5"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 53803,
                            "src": "651:7:5"
                        },
                        "id": 1710,
                        "nodeType": "InheritanceSpecifier",
                        "src": "651:7:5"
                    },
                    {
                        "baseName": {
                            "id": 1711,
                            "name": "ERC20Permit",
                            "nameLocations": ["660:11:5"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 56618,
                            "src": "660:11:5"
                        },
                        "id": 1712,
                        "nodeType": "InheritanceSpecifier",
                        "src": "660:11:5"
                    },
                    {
                        "baseName": {
                            "id": 1713,
                            "name": "ERC20FlashMint",
                            "nameLocations": ["673:14:5"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 56430,
                            "src": "673:14:5"
                        },
                        "id": 1714,
                        "nodeType": "InheritanceSpecifier",
                        "src": "673:14:5"
                    }
                ],
                "canonicalName": "DevToken",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                    1796, 56430, 53862, 56618, 58197, 59471, 53887, 56680, 53803, 56464, 58314,
                    56186, 56062, 53929, 56644, 56140, 58129
                ],
                "name": "DevToken",
                "nameLocation": "602:8:5",
                "scope": 1797,
                "usedErrors": [
                    53669, 53674, 53899, 53904, 53909, 53918, 53923, 53928, 56209, 56214, 56219,
                    56495, 56502, 58139, 58219, 58222, 58328, 58330, 58907, 58912, 58917
                ],
                "usedEvents": [53680, 53867, 56074, 56083, 58211, 58216]
            }
        ],
        "license": "MIT"
    },
    "id": 5
}
