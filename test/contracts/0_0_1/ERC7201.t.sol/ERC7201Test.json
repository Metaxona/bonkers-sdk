{
    "abi": [
        {
            "type": "function",
            "name": "IS_TEST",
            "inputs": [],
            "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "METAXONA_STORAGE_TEST",
            "inputs": [],
            "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "excludeArtifacts",
            "inputs": [],
            "outputs": [
                { "name": "excludedArtifacts_", "type": "string[]", "internalType": "string[]" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "excludeContracts",
            "inputs": [],
            "outputs": [
                { "name": "excludedContracts_", "type": "address[]", "internalType": "address[]" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "excludeSenders",
            "inputs": [],
            "outputs": [
                { "name": "excludedSenders_", "type": "address[]", "internalType": "address[]" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "failed",
            "inputs": [],
            "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "setUp",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "targetArtifactSelectors",
            "inputs": [],
            "outputs": [
                {
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                    "components": [
                        { "name": "artifact", "type": "string", "internalType": "string" },
                        { "name": "selectors", "type": "bytes4[]", "internalType": "bytes4[]" }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "targetArtifacts",
            "inputs": [],
            "outputs": [
                { "name": "targetedArtifacts_", "type": "string[]", "internalType": "string[]" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "targetContracts",
            "inputs": [],
            "outputs": [
                { "name": "targetedContracts_", "type": "address[]", "internalType": "address[]" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "targetInterfaces",
            "inputs": [],
            "outputs": [
                {
                    "name": "targetedInterfaces_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "components": [
                        { "name": "addr", "type": "address", "internalType": "address" },
                        { "name": "artifacts", "type": "string[]", "internalType": "string[]" }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "targetSelectors",
            "inputs": [],
            "outputs": [
                {
                    "name": "targetedSelectors_",
                    "type": "tuple[]",
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "components": [
                        { "name": "addr", "type": "address", "internalType": "address" },
                        { "name": "selectors", "type": "bytes4[]", "internalType": "bytes4[]" }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "targetSenders",
            "inputs": [],
            "outputs": [
                { "name": "targetedSenders_", "type": "address[]", "internalType": "address[]" }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "test_checkERC7201",
            "inputs": [],
            "outputs": [],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "test_getERC7201",
            "inputs": [],
            "outputs": [],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "test_getRoleId",
            "inputs": [],
            "outputs": [],
            "stateMutability": "view"
        },
        {
            "type": "event",
            "name": "log",
            "inputs": [
                { "name": "", "type": "string", "indexed": false, "internalType": "string" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_address",
            "inputs": [
                { "name": "", "type": "address", "indexed": false, "internalType": "address" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_array",
            "inputs": [
                {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_array",
            "inputs": [
                { "name": "val", "type": "int256[]", "indexed": false, "internalType": "int256[]" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_array",
            "inputs": [
                {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_bytes",
            "inputs": [{ "name": "", "type": "bytes", "indexed": false, "internalType": "bytes" }],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_bytes32",
            "inputs": [
                { "name": "", "type": "bytes32", "indexed": false, "internalType": "bytes32" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_int",
            "inputs": [
                { "name": "", "type": "int256", "indexed": false, "internalType": "int256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_named_address",
            "inputs": [
                { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
                { "name": "val", "type": "address", "indexed": false, "internalType": "address" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_named_array",
            "inputs": [
                { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
                {
                    "name": "val",
                    "type": "uint256[]",
                    "indexed": false,
                    "internalType": "uint256[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_named_array",
            "inputs": [
                { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
                { "name": "val", "type": "int256[]", "indexed": false, "internalType": "int256[]" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_named_array",
            "inputs": [
                { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
                {
                    "name": "val",
                    "type": "address[]",
                    "indexed": false,
                    "internalType": "address[]"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_named_bytes",
            "inputs": [
                { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
                { "name": "val", "type": "bytes", "indexed": false, "internalType": "bytes" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_named_bytes32",
            "inputs": [
                { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
                { "name": "val", "type": "bytes32", "indexed": false, "internalType": "bytes32" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_named_decimal_int",
            "inputs": [
                { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
                { "name": "val", "type": "int256", "indexed": false, "internalType": "int256" },
                {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_named_decimal_uint",
            "inputs": [
                { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
                { "name": "val", "type": "uint256", "indexed": false, "internalType": "uint256" },
                {
                    "name": "decimals",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_named_int",
            "inputs": [
                { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
                { "name": "val", "type": "int256", "indexed": false, "internalType": "int256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_named_string",
            "inputs": [
                { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
                { "name": "val", "type": "string", "indexed": false, "internalType": "string" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_named_uint",
            "inputs": [
                { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
                { "name": "val", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_string",
            "inputs": [
                { "name": "", "type": "string", "indexed": false, "internalType": "string" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "log_uint",
            "inputs": [
                { "name": "", "type": "uint256", "indexed": false, "internalType": "uint256" }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "logs",
            "inputs": [{ "name": "", "type": "bytes", "indexed": false, "internalType": "bytes" }],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "0x6080604052600c8054600160ff199182168117909255601e8054909116909117905534801561002d57600080fd5b506113308061003d6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063798592c311610097578063b5508aa911610066578063b5508aa9146101de578063ba414fa6146101e6578063e20c9f71146101fe578063fa7626d41461020657600080fd5b8063798592c31461017757806385226c811461017f5780638c4cf9b014610194578063916a17c6146101c957600080fd5b80633f7286f4116100d35780633f7286f41461014a578063471c3a0814610152578063476baef51461015a57806366d9a9a01461016257600080fd5b80630a9254e4146101055780631ed7831c1461010f5780632ade38801461012d5780633e5e3c2314610142575b600080fd5b61010d610213565b005b610117610264565b6040516101249190610d5b565b60405180910390f35b6101356102c6565b6040516101249190610dee565b610117610408565b610117610468565b61010d6104c8565b61010d6105df565b61016a610749565b6040516101249190610ef3565b61010d6108b6565b610187610956565b6040516101249190610f78565b6101bb7f2c1bb9b93337795319bfa98e611d268acdb24ce83b480b10cb25e078539cc70081565b604051908152602001610124565b6101d1610a26565b6040516101249190610fda565b610187610b0c565b6101ee610bdc565b6040519015158152602001610124565b610117610c80565b601e546101ee9060ff1681565b60405161021f90610d4e565b604051809103906000f08015801561023b573d6000803e3d6000fd5b50601e60016101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b606060168054806020026020016040519081016040528092919081815260200182805480156102bc57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161029e575b5050505050905090565b6060601d805480602002602001604051908101604052809291908181526020016000905b828210156103ff57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156103e857838290600052602060002001805461035b90611049565b80601f016020809104026020016040519081016040528092919081815260200182805461038790611049565b80156103d45780601f106103a9576101008083540402835291602001916103d4565b820191906000526020600020905b8154815290600101906020018083116103b757829003601f168201915b50505050508152602001906001019061033c565b5050505081525050815260200190600101906102ea565b50505050905090565b606060188054806020026020016040519081016040528092919081815260200182805480156102bc576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161029e575050505050905090565b606060178054806020026020016040519081016040528092919081815260200182805480156102bc576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161029e575050505050905090565b6105dd601e60019054906101000a90046001600160a01b03166001600160a01b03166317b7d7db6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561051e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105429190611083565b601e546040516303df5b5160e51b81526020600482015260156024820152741b595d185e1bdb984b9cdd1bdc9859d94b95195cdd605a1b60448201526101009091046001600160a01b031690637beb6a2090606401602060405180830381865afa1580156105b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d89190611083565b610ce0565b565b601e5460405163b8c5106760e01b8152602060048201526008602482015267424f545f524f4c4560c01b60448201527f6d5c9827c1f410bbb61d3b2a0a34b6b30492d9a1fd38588edca7ec4562ab9c9b91610694916101009091046001600160a01b03169063b8c5106790606401602060405180830381865afa15801561066a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068e9190611083565b82610ce0565b601e5460405163b8c5106760e01b8152602060048201526008602482015267424f545f524f4c4560c01b60448201526107469161010090046001600160a01b03169063b8c5106790606401602060405180830381865afa1580156106fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107209190611083565b7f6d5c9827c1f410bbb61d3b2a0a34b6b30492d9a1fd38588edca7ec4562ab9c9b610ce0565b50565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156103ff57838290600052602060002090600202016040518060400160405290816000820180546107a090611049565b80601f01602080910402602001604051908101604052809291908181526020018280546107cc90611049565b80156108195780601f106107ee57610100808354040283529160200191610819565b820191906000526020600020905b8154815290600101906020018083116107fc57829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561089e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108605790505b5050505050815250508152602001906001019061076d565b6105dd601e60019054906101000a90046001600160a01b03166001600160a01b03166317b7d7db6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561090c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109309190611083565b7f2c1bb9b93337795319bfa98e611d268acdb24ce83b480b10cb25e078539cc700610ce0565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156103ff57838290600052602060002001805461099990611049565b80601f01602080910402602001604051908101604052809291908181526020018280546109c590611049565b8015610a125780601f106109e757610100808354040283529160200191610a12565b820191906000526020600020905b8154815290600101906020018083116109f557829003601f168201915b50505050508152602001906001019061097a565b6060601c805480602002602001604051908101604052809291908181526020016000905b828210156103ff5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610af457602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610ab65790505b50505050508152505081526020019060010190610a4a565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156103ff578382906000526020600020018054610b4f90611049565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7b90611049565b8015610bc85780601f10610b9d57610100808354040283529160200191610bc8565b820191906000526020600020905b815481529060010190602001808311610bab57829003601f168201915b505050505081526020019060010190610b30565b60085460009060ff1615610bf4575060085460ff1690565b604051630667f9d760e41b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190526519985a5b195960d21b602483015260009163667f9d7090604401602060405180830381865afa158015610c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c799190611083565b1415905090565b606060158054806020026020016040519081016040528092919081815260200182805480156102bc576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161029e575050505050905090565b604051637c84c69b60e01b81526004810183905260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d90637c84c69b9060440160006040518083038186803b158015610d3257600080fd5b505afa158015610d46573d6000803e3d6000fd5b505050505050565b61025e8061109d83390190565b6020808252825182820181905260009190848201906040850190845b81811015610d9c5783516001600160a01b031683529284019291840191600101610d77565b50909695505050505050565b6000815180845260005b81811015610dce57602081850181015186830182015201610db2565b506000602082860101526020601f19601f83011685010191505092915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015610e9e57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015610e8857605f19898503018352610e76848651610da8565b948e01949350918d0191600101610e5a565b505050978a019794505091880191600101610e15565b50919a9950505050505050505050565b600081518084526020808501945080840160005b83811015610ee85781516001600160e01b03191687529582019590820190600101610ec2565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610f6a57888303603f1901855281518051878552610f3e88860182610da8565b91890151858303868b0152919050610f568183610eae565b968901969450505090860190600101610f1a565b509098975050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610fcd57603f19888603018452610fbb858351610da8565b94509285019290850190600101610f9f565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610f6a57888303603f19018552815180516001600160a01b0316845287015187840187905261103687850182610eae565b9588019593505090860190600101611001565b600181811c9082168061105d57607f821691505b60208210810361107d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561109557600080fd5b505191905056fe608060405234801561001057600080fd5b5061023e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806317b7d7db146100465780637beb6a2014610060578063b8c5106714610073575b600080fd5b61004e610086565b60405190815260200160405180910390f35b61004e61006e366004610165565b6100e4565b61004e610081366004610165565b610143565b600060ff196100b660017f1651784504cf0d07ad9acf0f42cc471e083cd48d647a5a45296bec12a025ca4b6101d7565b6040516020016100c891815260200190565b6040516020818303038152906040528051906020012016905090565b600060ff60001b19600184846040516100fe9291906101f8565b60405190819003902061011191906101d7565b60405160200161012391815260200190565b604051602081830303815290604052805190602001201690505b92915050565b600082826040516101559291906101f8565b6040518091039020905092915050565b6000806020838503121561017857600080fd5b823567ffffffffffffffff8082111561019057600080fd5b818501915085601f8301126101a457600080fd5b8135818111156101b357600080fd5b8660208285010111156101c557600080fd5b60209290920196919550909350505050565b8181038181111561013d57634e487b7160e01b600052601160045260246000fd5b818382376000910190815291905056fea26469706673582212209805191488a195900b223a30ee2db517050e512c40850e0df3af7d05e2041b8264736f6c63430008140033a2646970667358221220a807e6ae823c4166301126629e24d903728c0af2ebf9c68c1960cd6b2af18f5564736f6c63430008140033",
        "sourceMap": "162:778:146:-:0;;;3126:44:9;;;3166:4;-1:-1:-1;;3126:44:9;;;;;;;;1016:26:19;;;;;;;;;;;162:778:146;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c8063798592c311610097578063b5508aa911610066578063b5508aa9146101de578063ba414fa6146101e6578063e20c9f71146101fe578063fa7626d41461020657600080fd5b8063798592c31461017757806385226c811461017f5780638c4cf9b014610194578063916a17c6146101c957600080fd5b80633f7286f4116100d35780633f7286f41461014a578063471c3a0814610152578063476baef51461015a57806366d9a9a01461016257600080fd5b80630a9254e4146101055780631ed7831c1461010f5780632ade38801461012d5780633e5e3c2314610142575b600080fd5b61010d610213565b005b610117610264565b6040516101249190610d5b565b60405180910390f35b6101356102c6565b6040516101249190610dee565b610117610408565b610117610468565b61010d6104c8565b61010d6105df565b61016a610749565b6040516101249190610ef3565b61010d6108b6565b610187610956565b6040516101249190610f78565b6101bb7f2c1bb9b93337795319bfa98e611d268acdb24ce83b480b10cb25e078539cc70081565b604051908152602001610124565b6101d1610a26565b6040516101249190610fda565b610187610b0c565b6101ee610bdc565b6040519015158152602001610124565b610117610c80565b601e546101ee9060ff1681565b60405161021f90610d4e565b604051809103906000f08015801561023b573d6000803e3d6000fd5b50601e60016101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b606060168054806020026020016040519081016040528092919081815260200182805480156102bc57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161029e575b5050505050905090565b6060601d805480602002602001604051908101604052809291908181526020016000905b828210156103ff57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156103e857838290600052602060002001805461035b90611049565b80601f016020809104026020016040519081016040528092919081815260200182805461038790611049565b80156103d45780601f106103a9576101008083540402835291602001916103d4565b820191906000526020600020905b8154815290600101906020018083116103b757829003601f168201915b50505050508152602001906001019061033c565b5050505081525050815260200190600101906102ea565b50505050905090565b606060188054806020026020016040519081016040528092919081815260200182805480156102bc576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161029e575050505050905090565b606060178054806020026020016040519081016040528092919081815260200182805480156102bc576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161029e575050505050905090565b6105dd601e60019054906101000a90046001600160a01b03166001600160a01b03166317b7d7db6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561051e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105429190611083565b601e546040516303df5b5160e51b81526020600482015260156024820152741b595d185e1bdb984b9cdd1bdc9859d94b95195cdd605a1b60448201526101009091046001600160a01b031690637beb6a2090606401602060405180830381865afa1580156105b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d89190611083565b610ce0565b565b601e5460405163b8c5106760e01b8152602060048201526008602482015267424f545f524f4c4560c01b60448201527f6d5c9827c1f410bbb61d3b2a0a34b6b30492d9a1fd38588edca7ec4562ab9c9b91610694916101009091046001600160a01b03169063b8c5106790606401602060405180830381865afa15801561066a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068e9190611083565b82610ce0565b601e5460405163b8c5106760e01b8152602060048201526008602482015267424f545f524f4c4560c01b60448201526107469161010090046001600160a01b03169063b8c5106790606401602060405180830381865afa1580156106fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107209190611083565b7f6d5c9827c1f410bbb61d3b2a0a34b6b30492d9a1fd38588edca7ec4562ab9c9b610ce0565b50565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156103ff57838290600052602060002090600202016040518060400160405290816000820180546107a090611049565b80601f01602080910402602001604051908101604052809291908181526020018280546107cc90611049565b80156108195780601f106107ee57610100808354040283529160200191610819565b820191906000526020600020905b8154815290600101906020018083116107fc57829003601f168201915b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561089e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108605790505b5050505050815250508152602001906001019061076d565b6105dd601e60019054906101000a90046001600160a01b03166001600160a01b03166317b7d7db6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561090c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109309190611083565b7f2c1bb9b93337795319bfa98e611d268acdb24ce83b480b10cb25e078539cc700610ce0565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156103ff57838290600052602060002001805461099990611049565b80601f01602080910402602001604051908101604052809291908181526020018280546109c590611049565b8015610a125780601f106109e757610100808354040283529160200191610a12565b820191906000526020600020905b8154815290600101906020018083116109f557829003601f168201915b50505050508152602001906001019061097a565b6060601c805480602002602001604051908101604052809291908181526020016000905b828210156103ff5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610af457602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610ab65790505b50505050508152505081526020019060010190610a4a565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156103ff578382906000526020600020018054610b4f90611049565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7b90611049565b8015610bc85780601f10610b9d57610100808354040283529160200191610bc8565b820191906000526020600020905b815481529060010190602001808311610bab57829003601f168201915b505050505081526020019060010190610b30565b60085460009060ff1615610bf4575060085460ff1690565b604051630667f9d760e41b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190526519985a5b195960d21b602483015260009163667f9d7090604401602060405180830381865afa158015610c55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c799190611083565b1415905090565b606060158054806020026020016040519081016040528092919081815260200182805480156102bc576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161029e575050505050905090565b604051637c84c69b60e01b81526004810183905260248101829052737109709ecfa91a80626ff3989d68f67f5b1dd12d90637c84c69b9060440160006040518083038186803b158015610d3257600080fd5b505afa158015610d46573d6000803e3d6000fd5b505050505050565b61025e8061109d83390190565b6020808252825182820181905260009190848201906040850190845b81811015610d9c5783516001600160a01b031683529284019291840191600101610d77565b50909695505050505050565b6000815180845260005b81811015610dce57602081850181015186830182015201610db2565b506000602082860101526020601f19601f83011685010191505092915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015610e9e57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015610e8857605f19898503018352610e76848651610da8565b948e01949350918d0191600101610e5a565b505050978a019794505091880191600101610e15565b50919a9950505050505050505050565b600081518084526020808501945080840160005b83811015610ee85781516001600160e01b03191687529582019590820190600101610ec2565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610f6a57888303603f1901855281518051878552610f3e88860182610da8565b91890151858303868b0152919050610f568183610eae565b968901969450505090860190600101610f1a565b509098975050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610fcd57603f19888603018452610fbb858351610da8565b94509285019290850190600101610f9f565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610f6a57888303603f19018552815180516001600160a01b0316845287015187840187905261103687850182610eae565b9588019593505090860190600101611001565b600181811c9082168061105d57607f821691505b60208210810361107d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561109557600080fd5b505191905056fe608060405234801561001057600080fd5b5061023e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806317b7d7db146100465780637beb6a2014610060578063b8c5106714610073575b600080fd5b61004e610086565b60405190815260200160405180910390f35b61004e61006e366004610165565b6100e4565b61004e610081366004610165565b610143565b600060ff196100b660017f1651784504cf0d07ad9acf0f42cc471e083cd48d647a5a45296bec12a025ca4b6101d7565b6040516020016100c891815260200190565b6040516020818303038152906040528051906020012016905090565b600060ff60001b19600184846040516100fe9291906101f8565b60405190819003902061011191906101d7565b60405160200161012391815260200190565b604051602081830303815290604052805190602001201690505b92915050565b600082826040516101559291906101f8565b6040518091039020905092915050565b6000806020838503121561017857600080fd5b823567ffffffffffffffff8082111561019057600080fd5b818501915085601f8301126101a457600080fd5b8135818111156101b357600080fd5b8660208285010111156101c557600080fd5b60209290920196919550909350505050565b8181038181111561013d57634e487b7160e01b600052601160045260246000fd5b818382376000910190815291905056fea26469706673582212209805191488a195900b223a30ee2db517050e512c40850e0df3af7d05e2041b8264736f6c63430008140033a2646970667358221220a807e6ae823c4166301126629e24d903728c0af2ebf9c68c1960cd6b2af18f5564736f6c63430008140033",
        "sourceMap": "162:778:146:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:64;;;:::i;:::-;;2563:134:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3479:151;;;:::i;:::-;;;;;;;:::i;3340:133::-;;;:::i;3041:141::-;;;:::i;528:133:146:-;;;:::i;667:271::-;;;:::i;2849:186:12:-;;;:::i;:::-;;;;;;;:::i;409:113:146:-;;;:::i;2703:140:12:-;;;:::i;:::-;;;;;;;:::i;197:114:146:-;;245:66;197:114;;;;;5462:25:152;;;5450:2;5435:18;197:114:146;5316:177:152;3188:146:12;;;:::i;:::-;;;;;;;:::i;2268:141::-;;;:::i;1243:204:8:-;;;:::i;:::-;;;6741:14:152;;6734:22;6716:41;;6704:2;6689:18;1243:204:8;6576:187:152;2415:142:12;;;:::i;1016:26:19:-;;;;;;;;;339:64:146;383:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;373:7;;:23;;;;;-1:-1:-1;;;;;373:23:146;;;;;-1:-1:-1;;;;;373:23:146;;;;;;339:64::o;2563:134:12:-;2610:33;2674:16;2655:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2655:35:12;;;;;;;;;;;;;;;;;;;;;;;2563:134;:::o;3479:151::-;3528:42;3604:19;3582:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3582:41:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3479:151;:::o;3340:133::-;3386:33;3450:16;3431:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3431:35:12;;;;;;;;;;;;;;;;;;;;;;3340:133;:::o;3041:141::-;3089:35;3157:18;3136:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3136:39:12;;;;;;;;;;;;;;;;;;;;;;3041:141;:::o;528:133:146:-;577:77;586:7;;;;;;;;;-1:-1:-1;;;;;586:7:146;-1:-1:-1;;;;;586:20:146;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;610:7;;:43;;-1:-1:-1;;;610:43:146;;7544:2:152;610:43:146;;;7526:21:152;7583:2;7563:18;;;7556:30;-1:-1:-1;;;7602:18:152;;;7595:51;610:7:146;;;;-1:-1:-1;;;;;610:7:146;;:18;;7663::152;;610:43:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;577:8;:77::i;:::-;528:133::o;667:271::-;819:7;;:29;;-1:-1:-1;;;819:29:146;;7894:2:152;819:29:146;;;7876:21:152;7933:1;7913:18;;;7906:29;-1:-1:-1;;;7951:18:152;;;7944:38;734:66:146;;810:49;;819:7;;;;-1:-1:-1;;;;;819:7:146;;:17;;7999:18:152;;819:29:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;850:8;810;:49::i;:::-;878:7;;:29;;-1:-1:-1;;;878:29:146;;7894:2:152;878:29:146;;;7876:21:152;7933:1;7913:18;;;7906:29;-1:-1:-1;;;7951:18:152;;;7944:38;869:62:146;;878:7;;;-1:-1:-1;;;;;878:7:146;;:17;;7999:18:152;;878:29:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;909:21;869:8;:62::i;:::-;705:233;667:271::o;2849:186:12:-;2905:56;3002:26;2973:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2973:55:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:113:146;460:55;469:7;;;;;;;;;-1:-1:-1;;;;;469:7:146;-1:-1:-1;;;;;469:20:146;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;245:66;460:8;:55::i;2703:140:12:-;2751:34;2818:18;2797:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3188:146;3236:40;3309:18;3288:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3288:39:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3288:39:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2268:141;2317:34;2384:18;2363:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:204:8;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:8;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:8;;:7;:39;;;8202:51:152;;;-1:-1:-1;;;8269:18:152;;;8262:34;1428:1:8;;1377:7;;8175:18:152;;1377:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;2415:142:12:-;2464:35;2532:18;2511:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2511:39:12;;;;;;;;;;;;;;;;;;;;;;2415:142;:::o;3710:110:8:-;3789:24;;-1:-1:-1;;;3789:24:8;;;;;8481:25:152;;;8522:18;;;8515:34;;;3789:11:8;;;;8454:18:152;;3789:24:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3710:110;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:658:152:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:152;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:152;;14:658;-1:-1:-1;;;;;;14:658:152:o;677:423::-;719:3;757:5;751:12;784:6;779:3;772:19;809:1;819:162;833:6;830:1;827:13;819:162;;;895:4;951:13;;;947:22;;941:29;923:11;;;919:20;;912:59;848:12;819:162;;;823:3;1026:1;1019:4;1010:6;1005:3;1001:16;997:27;990:38;1089:4;1082:2;1078:7;1073:2;1065:6;1061:15;1057:29;1052:3;1048:39;1044:50;1037:57;;;677:423;;;;:::o;1105:1742::-;1338:2;1390:21;;;1460:13;;1363:18;;;1482:22;;;1309:4;;1338:2;1523;;1541:18;;;;1578:1;1621:15;;;1606:31;;1602:40;;1665:15;;;1309:4;;1729:1089;1745:6;1740:3;1737:15;1729:1089;;;-1:-1:-1;;1814:22:152;;;1810:36;1798:49;;1870:13;;1957:9;;-1:-1:-1;;;;;1953:35:152;1938:51;;2028:11;;2022:18;2060:15;;;2053:27;;;2141:19;;1910:15;;;2173:24;;;2354:21;;;;2220:2;2302:17;;;2290:30;;2286:39;;;2244:15;;;;2399:1;2413:296;2429:8;2424:3;2421:17;2413:296;;;2535:2;2531:7;2522:6;2514;2510:19;2506:33;2499:5;2492:48;2567:42;2602:6;2591:8;2585:15;2567:42;:::i;:::-;2638:17;;;;2557:52;-1:-1:-1;2681:14:152;;;;2457:1;2448:11;2413:296;;;-1:-1:-1;;;2796:12:152;;;;2732:6;-1:-1:-1;;2761:15:152;;;;1771:1;1762:11;1729:1089;;;-1:-1:-1;2835:6:152;;1105:1742;-1:-1:-1;;;;;;;;;;1105:1742:152:o;2852:461::-;2904:3;2942:5;2936:12;2969:6;2964:3;2957:19;2995:4;3024:2;3019:3;3015:12;3008:19;;3061:2;3054:5;3050:14;3082:1;3092:196;3106:6;3103:1;3100:13;3092:196;;;3171:13;;-1:-1:-1;;;;;;3167:40:152;3155:53;;3228:12;;;;3263:15;;;;3128:1;3121:9;3092:196;;;-1:-1:-1;3304:3:152;;2852:461;-1:-1:-1;;;;;2852:461:152:o;3318:1185::-;3536:4;3565:2;3605;3594:9;3590:18;3635:2;3624:9;3617:21;3658:6;3693;3687:13;3724:6;3716;3709:22;3750:2;3740:12;;3783:2;3772:9;3768:18;3761:25;;3845:2;3835:6;3832:1;3828:14;3817:9;3813:30;3809:39;3883:2;3875:6;3871:15;3904:1;3914:560;3928:6;3925:1;3922:13;3914:560;;;3993:22;;;-1:-1:-1;;3989:36:152;3977:49;;4049:13;;4095:9;;4117:18;;;4162:48;4194:15;;;4095:9;4162:48;:::i;:::-;4251:11;;;4245:18;4300:19;;;4283:15;;;4276:44;4245:18;4148:62;-1:-1:-1;4343:51:152;4148:62;4245:18;4343:51;:::i;:::-;4452:12;;;;4333:61;-1:-1:-1;;;4417:15:152;;;;3950:1;3943:9;3914:560;;;-1:-1:-1;4491:6:152;;3318:1185;-1:-1:-1;;;;;;;;3318:1185:152:o;4508:803::-;4670:4;4699:2;4739;4728:9;4724:18;4769:2;4758:9;4751:21;4792:6;4827;4821:13;4858:6;4850;4843:22;4896:2;4885:9;4881:18;4874:25;;4958:2;4948:6;4945:1;4941:14;4930:9;4926:30;4922:39;4908:53;;4996:2;4988:6;4984:15;5017:1;5027:255;5041:6;5038:1;5035:13;5027:255;;;5134:2;5130:7;5118:9;5110:6;5106:22;5102:36;5097:3;5090:49;5162:40;5195:6;5186;5180:13;5162:40;:::i;:::-;5152:50;-1:-1:-1;5260:12:152;;;;5225:15;;;;5063:1;5056:9;5027:255;;;-1:-1:-1;5299:6:152;;4508:803;-1:-1:-1;;;;;;;4508:803:152:o;5498:1073::-;5700:4;5729:2;5769;5758:9;5754:18;5799:2;5788:9;5781:21;5822:6;5857;5851:13;5888:6;5880;5873:22;5914:2;5904:12;;5947:2;5936:9;5932:18;5925:25;;6009:2;5999:6;5996:1;5992:14;5981:9;5977:30;5973:39;6047:2;6039:6;6035:15;6068:1;6078:464;6092:6;6089:1;6086:13;6078:464;;;6157:22;;;-1:-1:-1;;6153:36:152;6141:49;;6213:13;;6258:9;;-1:-1:-1;;;;;6254:35:152;6239:51;;6329:11;;6323:18;6361:15;;;6354:27;;;6404:58;6446:15;;;6323:18;6404:58;:::i;:::-;6520:12;;;;6394:68;-1:-1:-1;;6485:15:152;;;;6114:1;6107:9;6078:464;;6768:380;6847:1;6843:12;;;;6890;;;6911:61;;6965:4;6957:6;6953:17;6943:27;;6911:61;7018:2;7010:6;7007:14;6987:18;6984:38;6981:161;;7064:10;7059:3;7055:20;7052:1;7045:31;7099:4;7096:1;7089:15;7127:4;7124:1;7117:15;6981:161;;6768:380;;;:::o;7153:184::-;7223:6;7276:2;7264:9;7255:7;7251:23;7247:32;7244:52;;;7292:1;7289;7282:12;7244:52;-1:-1:-1;7315:16:152;;7153:184;-1:-1:-1;7153:184:152:o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "IS_TEST()": "fa7626d4",
        "METAXONA_STORAGE_TEST()": "8c4cf9b0",
        "excludeArtifacts()": "b5508aa9",
        "excludeContracts()": "e20c9f71",
        "excludeSenders()": "1ed7831c",
        "failed()": "ba414fa6",
        "setUp()": "0a9254e4",
        "targetArtifactSelectors()": "66d9a9a0",
        "targetArtifacts()": "85226c81",
        "targetContracts()": "3f7286f4",
        "targetInterfaces()": "2ade3880",
        "targetSelectors()": "916a17c6",
        "targetSenders()": "3e5e3c23",
        "test_checkERC7201()": "798592c3",
        "test_getERC7201()": "471c3a08",
        "test_getRoleId()": "476baef5"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METAXONA_STORAGE_TEST\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_checkERC7201\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getERC7201\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRoleId\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/contracts/helpers/ERC7201.t.sol\":\"ERC7201Test\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@common/=src/common/\",\":@contracts/=src/contracts/\",\":@helpers/=helpers/\",\":@interfaces/=src/interfaces/\",\":@openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@test-utils/=test/common/\",\":@types/=src/types/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":sizeChecker/=lib/Solidity_Contract_Size_Checker/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"helpers/ERC7201.sol\":{\"keccak256\":\"0x344ffa431ee30d46579d7ce9273004041f1061c36507f731cdd407abaf1735cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41ef0ed98668809cddf99f8ee2765da66d26969c63a3e1418c6ca5843d9db35d\",\"dweb:/ipfs/QmNwpEfKWp1qxLPQzn4595StPpELyGmm9S41Mp1FAZA5zF\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x2ba8ee7e4a68efd4cd75331b229874f4d4dc0a1010599afad88fc2cae5cb5d4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77ce1968d402b0414fec0a344b59c275d0706d4df5ac6293d605dd2202016345\",\"dweb:/ipfs/QmSVy4N4F15NzEuSpmvwRj1nTfAwaJpng7CywUBWLnWC4w\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x53c7ffb58010e54ed351157897f56eef1b57923a943ca9473a160a459e9ebf94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7dd236f0db2d4c1592635ef4de1f08c964181a32d1e722eaea2de911b1944f4\",\"dweb:/ipfs/QmcYjas4pbHrvtBoaUyWVUNv4tJvDu6nDwirxGXbRpUYGD\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xf92ea94fe38f8370a8dc5f591ebfb4958869e18d877469ce422162cc88c8b063\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://620b5d4b2ff24d66120ce9dbb72fbde7276f2e8b3bb93f626874183aee01e307\",\"dweb:/ipfs/Qmcyc8co7vCiJ7gUd3jj5Hc1rRPihjt3WSKs5ut6eiU1Ze\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b\",\"dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"test/contracts/helpers/ERC7201.t.sol\":{\"keccak256\":\"0x154daccb91661cc700c8c4adc5f2b7441f57621df119290aada1389cbfafa464\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d5990e2760050ced31a6b63b445b79cbb1118c0029164cc6cf0f0daeac8e1890\",\"dweb:/ipfs/QmeQLkqCx6d5zkqTuw5VhKPvHv7Y9rRMUu2aEbt1GYkj7h\"]}},\"version\":1}",
    "metadata": {
        "compiler": { "version": "0.8.20+commit.a1b79de6" },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        { "internalType": "string", "name": "", "type": "string", "indexed": false }
                    ],
                    "type": "event",
                    "name": "log",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_address",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "val",
                            "type": "uint256[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_array",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "int256[]",
                            "name": "val",
                            "type": "int256[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_array",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address[]",
                            "name": "val",
                            "type": "address[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_array",
                    "anonymous": false
                },
                {
                    "inputs": [
                        { "internalType": "bytes", "name": "", "type": "bytes", "indexed": false }
                    ],
                    "type": "event",
                    "name": "log_bytes",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_bytes32",
                    "anonymous": false
                },
                {
                    "inputs": [
                        { "internalType": "int256", "name": "", "type": "int256", "indexed": false }
                    ],
                    "type": "event",
                    "name": "log_int",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "key",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "val",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_named_address",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "key",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "val",
                            "type": "uint256[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_named_array",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "key",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "int256[]",
                            "name": "val",
                            "type": "int256[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_named_array",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "key",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "address[]",
                            "name": "val",
                            "type": "address[]",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_named_array",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "key",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes",
                            "name": "val",
                            "type": "bytes",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_named_bytes",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "key",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes32",
                            "name": "val",
                            "type": "bytes32",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_named_bytes32",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "key",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "int256",
                            "name": "val",
                            "type": "int256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "decimals",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_named_decimal_int",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "key",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "val",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "decimals",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_named_decimal_uint",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "key",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "int256",
                            "name": "val",
                            "type": "int256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_named_int",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "key",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "string",
                            "name": "val",
                            "type": "string",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_named_string",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "key",
                            "type": "string",
                            "indexed": false
                        },
                        {
                            "internalType": "uint256",
                            "name": "val",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_named_uint",
                    "anonymous": false
                },
                {
                    "inputs": [
                        { "internalType": "string", "name": "", "type": "string", "indexed": false }
                    ],
                    "type": "event",
                    "name": "log_string",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "log_uint",
                    "anonymous": false
                },
                {
                    "inputs": [
                        { "internalType": "bytes", "name": "", "type": "bytes", "indexed": false }
                    ],
                    "type": "event",
                    "name": "logs",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "IS_TEST",
                    "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "METAXONA_STORAGE_TEST",
                    "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "excludeArtifacts",
                    "outputs": [
                        {
                            "internalType": "string[]",
                            "name": "excludedArtifacts_",
                            "type": "string[]"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "excludeContracts",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "excludedContracts_",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "excludeSenders",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "excludedSenders_",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "failed",
                    "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "setUp"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "targetArtifactSelectors",
                    "outputs": [
                        {
                            "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                            "name": "targetedArtifactSelectors_",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "string", "name": "artifact", "type": "string" },
                                {
                                    "internalType": "bytes4[]",
                                    "name": "selectors",
                                    "type": "bytes4[]"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "targetArtifacts",
                    "outputs": [
                        {
                            "internalType": "string[]",
                            "name": "targetedArtifacts_",
                            "type": "string[]"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "targetContracts",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "targetedContracts_",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "targetInterfaces",
                    "outputs": [
                        {
                            "internalType": "struct StdInvariant.FuzzInterface[]",
                            "name": "targetedInterfaces_",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "address", "name": "addr", "type": "address" },
                                {
                                    "internalType": "string[]",
                                    "name": "artifacts",
                                    "type": "string[]"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "targetSelectors",
                    "outputs": [
                        {
                            "internalType": "struct StdInvariant.FuzzSelector[]",
                            "name": "targetedSelectors_",
                            "type": "tuple[]",
                            "components": [
                                { "internalType": "address", "name": "addr", "type": "address" },
                                {
                                    "internalType": "bytes4[]",
                                    "name": "selectors",
                                    "type": "bytes4[]"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "targetSenders",
                    "outputs": [
                        {
                            "internalType": "address[]",
                            "name": "targetedSenders_",
                            "type": "address[]"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "test_checkERC7201"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "test_getERC7201"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "test_getRoleId"
                }
            ],
            "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
            "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        },
        "settings": {
            "remappings": [
                "@common/=src/common/",
                "@contracts/=src/contracts/",
                "@helpers/=helpers/",
                "@interfaces/=src/interfaces/",
                "@openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
                "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/",
                "@test-utils/=test/common/",
                "@types/=src/types/",
                "ds-test/=lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
                "sizeChecker/=lib/Solidity_Contract_Size_Checker/",
                "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
            ],
            "optimizer": { "enabled": true, "runs": 200 },
            "metadata": { "bytecodeHash": "ipfs" },
            "compilationTarget": { "test/contracts/helpers/ERC7201.t.sol": "ERC7201Test" },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "helpers/ERC7201.sol": {
                "keccak256": "0x344ffa431ee30d46579d7ce9273004041f1061c36507f731cdd407abaf1735cb",
                "urls": [
                    "bzz-raw://41ef0ed98668809cddf99f8ee2765da66d26969c63a3e1418c6ca5843d9db35d",
                    "dweb:/ipfs/QmNwpEfKWp1qxLPQzn4595StPpELyGmm9S41Mp1FAZA5zF"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/Base.sol": {
                "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
                "urls": [
                    "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
                    "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/StdAssertions.sol": {
                "keccak256": "0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270",
                "urls": [
                    "bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe",
                    "dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/StdChains.sol": {
                "keccak256": "0x2ba8ee7e4a68efd4cd75331b229874f4d4dc0a1010599afad88fc2cae5cb5d4a",
                "urls": [
                    "bzz-raw://77ce1968d402b0414fec0a344b59c275d0706d4df5ac6293d605dd2202016345",
                    "dweb:/ipfs/QmSVy4N4F15NzEuSpmvwRj1nTfAwaJpng7CywUBWLnWC4w"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/StdCheats.sol": {
                "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
                "urls": [
                    "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
                    "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/StdError.sol": {
                "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
                "urls": [
                    "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
                    "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/StdInvariant.sol": {
                "keccak256": "0x53c7ffb58010e54ed351157897f56eef1b57923a943ca9473a160a459e9ebf94",
                "urls": [
                    "bzz-raw://e7dd236f0db2d4c1592635ef4de1f08c964181a32d1e722eaea2de911b1944f4",
                    "dweb:/ipfs/QmcYjas4pbHrvtBoaUyWVUNv4tJvDu6nDwirxGXbRpUYGD"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/StdJson.sol": {
                "keccak256": "0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d",
                "urls": [
                    "bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54",
                    "dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/StdMath.sol": {
                "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
                "urls": [
                    "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
                    "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/StdStorage.sol": {
                "keccak256": "0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3",
                "urls": [
                    "bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678",
                    "dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/StdStyle.sol": {
                "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
                "urls": [
                    "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
                    "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/StdToml.sol": {
                "keccak256": "0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab",
                "urls": [
                    "bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d",
                    "dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/StdUtils.sol": {
                "keccak256": "0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410",
                "urls": [
                    "bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa",
                    "dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/Test.sol": {
                "keccak256": "0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe",
                "urls": [
                    "bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e",
                    "dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/Vm.sol": {
                "keccak256": "0xf92ea94fe38f8370a8dc5f591ebfb4958869e18d877469ce422162cc88c8b063",
                "urls": [
                    "bzz-raw://620b5d4b2ff24d66120ce9dbb72fbde7276f2e8b3bb93f626874183aee01e307",
                    "dweb:/ipfs/Qmcyc8co7vCiJ7gUd3jj5Hc1rRPihjt3WSKs5ut6eiU1Ze"
                ],
                "license": "MIT OR Apache-2.0"
            },
            "lib/forge-std/src/console.sol": {
                "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
                "urls": [
                    "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
                    "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/console2.sol": {
                "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
                "urls": [
                    "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
                    "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/interfaces/IERC165.sol": {
                "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
                "urls": [
                    "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
                    "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/interfaces/IERC20.sol": {
                "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
                "urls": [
                    "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
                    "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/interfaces/IERC721.sol": {
                "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
                "urls": [
                    "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
                    "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/interfaces/IMulticall3.sol": {
                "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
                "urls": [
                    "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
                    "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/mocks/MockERC20.sol": {
                "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
                "urls": [
                    "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
                    "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/mocks/MockERC721.sol": {
                "keccak256": "0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9",
                "urls": [
                    "bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b",
                    "dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN"
                ],
                "license": "MIT"
            },
            "lib/forge-std/src/safeconsole.sol": {
                "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
                "urls": [
                    "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
                    "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
                ],
                "license": "MIT"
            },
            "test/contracts/helpers/ERC7201.t.sol": {
                "keccak256": "0x154daccb91661cc700c8c4adc5f2b7441f57621df119290aada1389cbfafa464",
                "urls": [
                    "bzz-raw://d5990e2760050ced31a6b63b445b79cbb1118c0029164cc6cf0f0daeac8e1890",
                    "dweb:/ipfs/QmeQLkqCx6d5zkqTuw5VhKPvHv7Y9rRMUu2aEbt1GYkj7h"
                ],
                "license": "Unlicensed"
            }
        },
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 1858,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "stdstore",
                "offset": 0,
                "slot": "0",
                "type": "t_struct(StdStorage)9269_storage"
            },
            {
                "astId": 2054,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "_failed",
                "offset": 0,
                "slot": "8",
                "type": "t_bool"
            },
            {
                "astId": 4555,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "stdChainsInitialized",
                "offset": 1,
                "slot": "8",
                "type": "t_bool"
            },
            {
                "astId": 4576,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "chains",
                "offset": 0,
                "slot": "9",
                "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)4571_storage)"
            },
            {
                "astId": 4580,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "defaultRpcUrls",
                "offset": 0,
                "slot": "10",
                "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
            },
            {
                "astId": 4584,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "idToAlias",
                "offset": 0,
                "slot": "11",
                "type": "t_mapping(t_uint256,t_string_storage)"
            },
            {
                "astId": 4587,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "fallbackToDefaultRpcUrls",
                "offset": 0,
                "slot": "12",
                "type": "t_bool"
            },
            {
                "astId": 5345,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "gasMeteringOff",
                "offset": 1,
                "slot": "12",
                "type": "t_bool"
            },
            {
                "astId": 7382,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "stdstore",
                "offset": 0,
                "slot": "13",
                "type": "t_struct(StdStorage)9269_storage"
            },
            {
                "astId": 8256,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "_excludedContracts",
                "offset": 0,
                "slot": "21",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 8259,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "_excludedSenders",
                "offset": 0,
                "slot": "22",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 8262,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "_targetedContracts",
                "offset": 0,
                "slot": "23",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 8265,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "_targetedSenders",
                "offset": 0,
                "slot": "24",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 8268,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "_excludedArtifacts",
                "offset": 0,
                "slot": "25",
                "type": "t_array(t_string_storage)dyn_storage"
            },
            {
                "astId": 8271,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "_targetedArtifacts",
                "offset": 0,
                "slot": "26",
                "type": "t_array(t_string_storage)dyn_storage"
            },
            {
                "astId": 8275,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "_targetedArtifactSelectors",
                "offset": 0,
                "slot": "27",
                "type": "t_array(t_struct(FuzzArtifactSelector)8247_storage)dyn_storage"
            },
            {
                "astId": 8279,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "_targetedSelectors",
                "offset": 0,
                "slot": "28",
                "type": "t_array(t_struct(FuzzSelector)8241_storage)dyn_storage"
            },
            {
                "astId": 8283,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "_targetedInterfaces",
                "offset": 0,
                "slot": "29",
                "type": "t_array(t_struct(FuzzInterface)8253_storage)dyn_storage"
            },
            {
                "astId": 13868,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "IS_TEST",
                "offset": 0,
                "slot": "30",
                "type": "t_bool"
            },
            {
                "astId": 77585,
                "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                "label": "erc7201",
                "offset": 1,
                "slot": "30",
                "type": "t_contract(ERC7201)84"
            }
        ],
        "types": {
            "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
            "t_array(t_address)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32",
                "base": "t_address"
            },
            "t_array(t_bytes32)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "bytes32[]",
                "numberOfBytes": "32",
                "base": "t_bytes32"
            },
            "t_array(t_bytes4)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "bytes4[]",
                "numberOfBytes": "32",
                "base": "t_bytes4"
            },
            "t_array(t_string_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "string[]",
                "numberOfBytes": "32",
                "base": "t_string_storage"
            },
            "t_array(t_struct(FuzzArtifactSelector)8247_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct StdInvariant.FuzzArtifactSelector[]",
                "numberOfBytes": "32",
                "base": "t_struct(FuzzArtifactSelector)8247_storage"
            },
            "t_array(t_struct(FuzzInterface)8253_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct StdInvariant.FuzzInterface[]",
                "numberOfBytes": "32",
                "base": "t_struct(FuzzInterface)8253_storage"
            },
            "t_array(t_struct(FuzzSelector)8241_storage)dyn_storage": {
                "encoding": "dynamic_array",
                "label": "struct StdInvariant.FuzzSelector[]",
                "numberOfBytes": "32",
                "base": "t_struct(FuzzSelector)8241_storage"
            },
            "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
            "t_bytes32": { "encoding": "inplace", "label": "bytes32", "numberOfBytes": "32" },
            "t_bytes4": { "encoding": "inplace", "label": "bytes4", "numberOfBytes": "4" },
            "t_bytes_storage": { "encoding": "bytes", "label": "bytes", "numberOfBytes": "32" },
            "t_contract(ERC7201)84": {
                "encoding": "inplace",
                "label": "contract ERC7201",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)9244_storage)))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)9244_storage))"
            },
            "t_mapping(t_bytes32,t_struct(FindData)9244_storage)": {
                "encoding": "mapping",
                "key": "t_bytes32",
                "label": "mapping(bytes32 => struct FindData)",
                "numberOfBytes": "32",
                "value": "t_struct(FindData)9244_storage"
            },
            "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)9244_storage))": {
                "encoding": "mapping",
                "key": "t_bytes4",
                "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_bytes32,t_struct(FindData)9244_storage)"
            },
            "t_mapping(t_string_memory_ptr,t_string_storage)": {
                "encoding": "mapping",
                "key": "t_string_memory_ptr",
                "label": "mapping(string => string)",
                "numberOfBytes": "32",
                "value": "t_string_storage"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Chain)4571_storage)": {
                "encoding": "mapping",
                "key": "t_string_memory_ptr",
                "label": "mapping(string => struct StdChains.Chain)",
                "numberOfBytes": "32",
                "value": "t_struct(Chain)4571_storage"
            },
            "t_mapping(t_uint256,t_string_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => string)",
                "numberOfBytes": "32",
                "value": "t_string_storage"
            },
            "t_string_memory_ptr": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
            },
            "t_string_storage": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
            "t_struct(Chain)4571_storage": {
                "encoding": "inplace",
                "label": "struct StdChains.Chain",
                "numberOfBytes": "128",
                "members": [
                    {
                        "astId": 4564,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "name",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 4566,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "chainId",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 4568,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "chainAlias",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 4570,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "rpcUrl",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_string_storage"
                    }
                ]
            },
            "t_struct(FindData)9244_storage": {
                "encoding": "inplace",
                "label": "struct FindData",
                "numberOfBytes": "128",
                "members": [
                    {
                        "astId": 9237,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "slot",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 9239,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "offsetLeft",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 9241,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "offsetRight",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 9243,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "found",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_bool"
                    }
                ]
            },
            "t_struct(FuzzArtifactSelector)8247_storage": {
                "encoding": "inplace",
                "label": "struct StdInvariant.FuzzArtifactSelector",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 8243,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "artifact",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_string_storage"
                    },
                    {
                        "astId": 8246,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "selectors",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_array(t_bytes4)dyn_storage"
                    }
                ]
            },
            "t_struct(FuzzInterface)8253_storage": {
                "encoding": "inplace",
                "label": "struct StdInvariant.FuzzInterface",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 8249,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "addr",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 8252,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "artifacts",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_array(t_string_storage)dyn_storage"
                    }
                ]
            },
            "t_struct(FuzzSelector)8241_storage": {
                "encoding": "inplace",
                "label": "struct StdInvariant.FuzzSelector",
                "numberOfBytes": "64",
                "members": [
                    {
                        "astId": 8237,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "addr",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_address"
                    },
                    {
                        "astId": 8240,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "selectors",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_array(t_bytes4)dyn_storage"
                    }
                ]
            },
            "t_struct(StdStorage)9269_storage": {
                "encoding": "inplace",
                "label": "struct StdStorage",
                "numberOfBytes": "256",
                "members": [
                    {
                        "astId": 9253,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "finds",
                        "offset": 0,
                        "slot": "0",
                        "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)9244_storage)))"
                    },
                    {
                        "astId": 9256,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "_keys",
                        "offset": 0,
                        "slot": "1",
                        "type": "t_array(t_bytes32)dyn_storage"
                    },
                    {
                        "astId": 9258,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "_sig",
                        "offset": 0,
                        "slot": "2",
                        "type": "t_bytes4"
                    },
                    {
                        "astId": 9260,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "_depth",
                        "offset": 0,
                        "slot": "3",
                        "type": "t_uint256"
                    },
                    {
                        "astId": 9262,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "_target",
                        "offset": 0,
                        "slot": "4",
                        "type": "t_address"
                    },
                    {
                        "astId": 9264,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "_set",
                        "offset": 0,
                        "slot": "5",
                        "type": "t_bytes32"
                    },
                    {
                        "astId": 9266,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "_enable_packed_slots",
                        "offset": 0,
                        "slot": "6",
                        "type": "t_bool"
                    },
                    {
                        "astId": 9268,
                        "contract": "test/contracts/helpers/ERC7201.t.sol:ERC7201Test",
                        "label": "_calldata",
                        "offset": 0,
                        "slot": "7",
                        "type": "t_bytes_storage"
                    }
                ]
            },
            "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" }
        }
    },
    "ast": {
        "absolutePath": "test/contracts/helpers/ERC7201.t.sol",
        "id": 77649,
        "exportedSymbols": {
            "ERC7201": [84],
            "ERC7201Test": [77648],
            "Test": [13869],
            "console2": [33871]
        },
        "nodeType": "SourceUnit",
        "src": "39:902:146",
        "nodes": [
            {
                "id": 77572,
                "nodeType": "PragmaDirective",
                "src": "39:23:146",
                "nodes": [],
                "literals": ["solidity", "0.8", ".20"]
            },
            {
                "id": 77575,
                "nodeType": "ImportDirective",
                "src": "64:50:146",
                "nodes": [],
                "absolutePath": "lib/forge-std/src/Test.sol",
                "file": "forge-std/Test.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 77649,
                "sourceUnit": 13870,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 77573,
                            "name": "Test",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13869,
                            "src": "72:4:146",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 77574,
                            "name": "console2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33871,
                            "src": "78:8:146",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 77577,
                "nodeType": "ImportDirective",
                "src": "115:45:146",
                "nodes": [],
                "absolutePath": "helpers/ERC7201.sol",
                "file": "@helpers/ERC7201.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 77649,
                "sourceUnit": 85,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 77576,
                            "name": "ERC7201",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "123:7:146",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 77648,
                "nodeType": "ContractDefinition",
                "src": "162:778:146",
                "nodes": [
                    {
                        "id": 77582,
                        "nodeType": "VariableDeclaration",
                        "src": "197:114:146",
                        "nodes": [],
                        "constant": true,
                        "functionSelector": "8c4cf9b0",
                        "mutability": "constant",
                        "name": "METAXONA_STORAGE_TEST",
                        "nameLocation": "221:21:146",
                        "scope": 77648,
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                        },
                        "typeName": {
                            "id": 77580,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "197:7:146",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        },
                        "value": {
                            "hexValue": "307832633162623962393333333737393533313962666139386536313164323638616364623234636538336234383062313063623235653037383533396363373030",
                            "id": 77581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "245:66:146",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_19950752024470774666387787824071833785101528301652880192839495664730327795456_by_1",
                                "typeString": "int_const 1995...(69 digits omitted)...5456"
                            },
                            "value": "0x2c1bb9b93337795319bfa98e611d268acdb24ce83b480b10cb25e078539cc700"
                        },
                        "visibility": "public"
                    },
                    {
                        "id": 77585,
                        "nodeType": "VariableDeclaration",
                        "src": "317:15:146",
                        "nodes": [],
                        "constant": false,
                        "mutability": "mutable",
                        "name": "erc7201",
                        "nameLocation": "325:7:146",
                        "scope": 77648,
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC7201_$84",
                            "typeString": "contract ERC7201"
                        },
                        "typeName": {
                            "id": 77584,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 77583,
                                "name": "ERC7201",
                                "nameLocations": ["317:7:146"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 84,
                                "src": "317:7:146"
                            },
                            "referencedDeclaration": 84,
                            "src": "317:7:146",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC7201_$84",
                                "typeString": "contract ERC7201"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "id": 77596,
                        "nodeType": "FunctionDefinition",
                        "src": "339:64:146",
                        "nodes": [],
                        "body": {
                            "id": 77595,
                            "nodeType": "Block",
                            "src": "363:40:146",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 77593,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 77588,
                                            "name": "erc7201",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 77585,
                                            "src": "373:7:146",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC7201_$84",
                                                "typeString": "contract ERC7201"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 77591,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "NewExpression",
                                                "src": "383:11:146",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC7201_$84_$",
                                                    "typeString": "function () returns (contract ERC7201)"
                                                },
                                                "typeName": {
                                                    "id": 77590,
                                                    "nodeType": "UserDefinedTypeName",
                                                    "pathNode": {
                                                        "id": 77589,
                                                        "name": "ERC7201",
                                                        "nameLocations": ["387:7:146"],
                                                        "nodeType": "IdentifierPath",
                                                        "referencedDeclaration": 84,
                                                        "src": "387:7:146"
                                                    },
                                                    "referencedDeclaration": 84,
                                                    "src": "387:7:146",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_ERC7201_$84",
                                                        "typeString": "contract ERC7201"
                                                    }
                                                }
                                            },
                                            "id": 77592,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "383:13:146",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC7201_$84",
                                                "typeString": "contract ERC7201"
                                            }
                                        },
                                        "src": "373:23:146",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ERC7201_$84",
                                            "typeString": "contract ERC7201"
                                        }
                                    },
                                    "id": 77594,
                                    "nodeType": "ExpressionStatement",
                                    "src": "373:23:146"
                                }
                            ]
                        },
                        "functionSelector": "0a9254e4",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "setUp",
                        "nameLocation": "348:5:146",
                        "parameters": {
                            "id": 77586,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "353:2:146"
                        },
                        "returnParameters": {
                            "id": 77587,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "363:0:146"
                        },
                        "scope": 77648,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 77607,
                        "nodeType": "FunctionDefinition",
                        "src": "409:113:146",
                        "nodes": [],
                        "body": {
                            "id": 77606,
                            "nodeType": "Block",
                            "src": "450:72:146",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "id": 77600,
                                                        "name": "erc7201",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 77585,
                                                        "src": "469:7:146",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_ERC7201_$84",
                                                            "typeString": "contract ERC7201"
                                                        }
                                                    },
                                                    "id": 77601,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "477:12:146",
                                                    "memberName": "checkERC7201",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 32,
                                                    "src": "469:20:146",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_bytes32_$",
                                                        "typeString": "function () pure external returns (bytes32)"
                                                    }
                                                },
                                                "id": 77602,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "469:22:146",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "id": 77603,
                                                "name": "METAXONA_STORAGE_TEST",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 77582,
                                                "src": "493:21:146",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            ],
                                            "id": 77599,
                                            "name": "assertEq",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                2180, 2198, 2213, 2231, 2285, 2303, 2357, 2375,
                                                2390, 2408, 2452, 2470, 2485, 2503, 2520, 2540,
                                                2557, 2577, 2594, 2614, 2631, 2651, 2668, 2688,
                                                2705, 2725, 2742, 2762
                                            ],
                                            "referencedDeclaration": 2390,
                                            "src": "460:8:146",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$__$",
                                                "typeString": "function (bytes32,bytes32) pure"
                                            }
                                        },
                                        "id": 77604,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "460:55:146",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 77605,
                                    "nodeType": "ExpressionStatement",
                                    "src": "460:55:146"
                                }
                            ]
                        },
                        "functionSelector": "798592c3",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "test_checkERC7201",
                        "nameLocation": "418:17:146",
                        "parameters": {
                            "id": 77597,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "435:2:146"
                        },
                        "returnParameters": {
                            "id": 77598,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "450:0:146"
                        },
                        "scope": 77648,
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 77621,
                        "nodeType": "FunctionDefinition",
                        "src": "528:133:146",
                        "nodes": [],
                        "body": {
                            "id": 77620,
                            "nodeType": "Block",
                            "src": "567:94:146",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "expression": {
                                                        "id": 77611,
                                                        "name": "erc7201",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 77585,
                                                        "src": "586:7:146",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_ERC7201_$84",
                                                            "typeString": "contract ERC7201"
                                                        }
                                                    },
                                                    "id": 77612,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "594:12:146",
                                                    "memberName": "checkERC7201",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 32,
                                                    "src": "586:20:146",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_bytes32_$",
                                                        "typeString": "function () pure external returns (bytes32)"
                                                    }
                                                },
                                                "id": 77613,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "586:22:146",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "6d657461786f6e612e73746f726167652e54657374",
                                                        "id": 77616,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "629:23:146",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_1651784504cf0d07ad9acf0f42cc471e083cd48d647a5a45296bec12a025ca4b",
                                                            "typeString": "literal_string \"metaxona.storage.Test\""
                                                        },
                                                        "value": "metaxona.storage.Test"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_stringliteral_1651784504cf0d07ad9acf0f42cc471e083cd48d647a5a45296bec12a025ca4b",
                                                            "typeString": "literal_string \"metaxona.storage.Test\""
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 77614,
                                                        "name": "erc7201",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 77585,
                                                        "src": "610:7:146",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_ERC7201_$84",
                                                            "typeString": "contract ERC7201"
                                                        }
                                                    },
                                                    "id": 77615,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "618:10:146",
                                                    "memberName": "getERC7201",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 67,
                                                    "src": "610:18:146",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                                                        "typeString": "function (string memory) pure external returns (bytes32)"
                                                    }
                                                },
                                                "id": 77617,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "610:43:146",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            ],
                                            "id": 77610,
                                            "name": "assertEq",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                2180, 2198, 2213, 2231, 2285, 2303, 2357, 2375,
                                                2390, 2408, 2452, 2470, 2485, 2503, 2520, 2540,
                                                2557, 2577, 2594, 2614, 2631, 2651, 2668, 2688,
                                                2705, 2725, 2742, 2762
                                            ],
                                            "referencedDeclaration": 2390,
                                            "src": "577:8:146",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$__$",
                                                "typeString": "function (bytes32,bytes32) pure"
                                            }
                                        },
                                        "id": 77618,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "577:77:146",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 77619,
                                    "nodeType": "ExpressionStatement",
                                    "src": "577:77:146"
                                }
                            ]
                        },
                        "functionSelector": "471c3a08",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "test_getERC7201",
                        "nameLocation": "537:15:146",
                        "parameters": {
                            "id": 77608,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "552:2:146"
                        },
                        "returnParameters": {
                            "id": 77609,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "567:0:146"
                        },
                        "scope": 77648,
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 77647,
                        "nodeType": "FunctionDefinition",
                        "src": "667:271:146",
                        "nodes": [],
                        "body": {
                            "id": 77646,
                            "nodeType": "Block",
                            "src": "705:233:146",
                            "nodes": [],
                            "statements": [
                                {
                                    "assignments": [77625],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 77625,
                                            "mutability": "mutable",
                                            "name": "BOT_ROLE",
                                            "nameLocation": "723:8:146",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 77646,
                                            "src": "715:16:146",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            },
                                            "typeName": {
                                                "id": 77624,
                                                "name": "bytes32",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "715:7:146",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 77627,
                                    "initialValue": {
                                        "hexValue": "307836643563393832376331663431306262623631643362326130613334623662333034393264396131666433383538386564636137656334353632616239633962",
                                        "id": 77626,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "734:66:146",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_49465700562843954834904928967258097497273204242487115467515516709241833102491_by_1",
                                            "typeString": "int_const 4946...(69 digits omitted)...2491"
                                        },
                                        "value": "0x6d5c9827c1f410bbb61d3b2a0a34b6b30492d9a1fd38588edca7ec4562ab9c9b"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "715:85:146"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "424f545f524f4c45",
                                                        "id": 77631,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "837:10:146",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_6d5c9827c1f410bbb61d3b2a0a34b6b30492d9a1fd38588edca7ec4562ab9c9b",
                                                            "typeString": "literal_string \"BOT_ROLE\""
                                                        },
                                                        "value": "BOT_ROLE"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_stringliteral_6d5c9827c1f410bbb61d3b2a0a34b6b30492d9a1fd38588edca7ec4562ab9c9b",
                                                            "typeString": "literal_string \"BOT_ROLE\""
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 77629,
                                                        "name": "erc7201",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 77585,
                                                        "src": "819:7:146",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_ERC7201_$84",
                                                            "typeString": "contract ERC7201"
                                                        }
                                                    },
                                                    "id": 77630,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "827:9:146",
                                                    "memberName": "getRoleId",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 83,
                                                    "src": "819:17:146",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                                                        "typeString": "function (string memory) pure external returns (bytes32)"
                                                    }
                                                },
                                                "id": 77632,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "819:29:146",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "id": 77633,
                                                "name": "BOT_ROLE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 77625,
                                                "src": "850:8:146",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            ],
                                            "id": 77628,
                                            "name": "assertEq",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                2180, 2198, 2213, 2231, 2285, 2303, 2357, 2375,
                                                2390, 2408, 2452, 2470, 2485, 2503, 2520, 2540,
                                                2557, 2577, 2594, 2614, 2631, 2651, 2668, 2688,
                                                2705, 2725, 2742, 2762
                                            ],
                                            "referencedDeclaration": 2390,
                                            "src": "810:8:146",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$__$",
                                                "typeString": "function (bytes32,bytes32) pure"
                                            }
                                        },
                                        "id": 77634,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "810:49:146",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 77635,
                                    "nodeType": "ExpressionStatement",
                                    "src": "810:49:146"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "424f545f524f4c45",
                                                        "id": 77639,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "896:10:146",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_6d5c9827c1f410bbb61d3b2a0a34b6b30492d9a1fd38588edca7ec4562ab9c9b",
                                                            "typeString": "literal_string \"BOT_ROLE\""
                                                        },
                                                        "value": "BOT_ROLE"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_stringliteral_6d5c9827c1f410bbb61d3b2a0a34b6b30492d9a1fd38588edca7ec4562ab9c9b",
                                                            "typeString": "literal_string \"BOT_ROLE\""
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 77637,
                                                        "name": "erc7201",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 77585,
                                                        "src": "878:7:146",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_ERC7201_$84",
                                                            "typeString": "contract ERC7201"
                                                        }
                                                    },
                                                    "id": 77638,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "886:9:146",
                                                    "memberName": "getRoleId",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 83,
                                                    "src": "878:17:146",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                                                        "typeString": "function (string memory) pure external returns (bytes32)"
                                                    }
                                                },
                                                "id": 77640,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "878:29:146",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "424f545f524f4c45",
                                                        "id": 77642,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "919:10:146",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_6d5c9827c1f410bbb61d3b2a0a34b6b30492d9a1fd38588edca7ec4562ab9c9b",
                                                            "typeString": "literal_string \"BOT_ROLE\""
                                                        },
                                                        "value": "BOT_ROLE"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_stringliteral_6d5c9827c1f410bbb61d3b2a0a34b6b30492d9a1fd38588edca7ec4562ab9c9b",
                                                            "typeString": "literal_string \"BOT_ROLE\""
                                                        }
                                                    ],
                                                    "id": 77641,
                                                    "name": "keccak256",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -8,
                                                    "src": "909:9:146",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                                    }
                                                },
                                                "id": 77643,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "909:21:146",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            ],
                                            "id": 77636,
                                            "name": "assertEq",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                2180, 2198, 2213, 2231, 2285, 2303, 2357, 2375,
                                                2390, 2408, 2452, 2470, 2485, 2503, 2520, 2540,
                                                2557, 2577, 2594, 2614, 2631, 2651, 2668, 2688,
                                                2705, 2725, 2742, 2762
                                            ],
                                            "referencedDeclaration": 2390,
                                            "src": "869:8:146",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$__$",
                                                "typeString": "function (bytes32,bytes32) pure"
                                            }
                                        },
                                        "id": 77644,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "869:62:146",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 77645,
                                    "nodeType": "ExpressionStatement",
                                    "src": "869:62:146"
                                }
                            ]
                        },
                        "functionSelector": "476baef5",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "test_getRoleId",
                        "nameLocation": "676:14:146",
                        "parameters": {
                            "id": 77622,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "690:2:146"
                        },
                        "returnParameters": {
                            "id": 77623,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "705:0:146"
                        },
                        "scope": 77648,
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 77578,
                            "name": "Test",
                            "nameLocations": ["186:4:146"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 13869,
                            "src": "186:4:146"
                        },
                        "id": 77579,
                        "nodeType": "InheritanceSpecifier",
                        "src": "186:4:146"
                    }
                ],
                "canonicalName": "ERC7201Test",
                "contractDependencies": [84],
                "contractKind": "contract",
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                    77648, 13869, 13817, 8497, 8166, 7373, 5313, 4531, 1862, 1859
                ],
                "name": "ERC7201Test",
                "nameLocation": "171:11:146",
                "scope": 77649,
                "usedErrors": [],
                "usedEvents": [
                    1936, 1940, 1944, 1948, 1952, 1956, 1960, 1964, 1970, 1976, 1984, 1992, 1998,
                    2004, 2010, 2016, 2021, 2026, 2031, 2038, 2045, 2052
                ]
            }
        ],
        "license": "Unlicensed"
    },
    "id": 146
}
